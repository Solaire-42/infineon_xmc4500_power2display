   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ssd1306.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_TXFIFO_IsFull,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_TXFIFO_IsFull:
  25              	.LFB180:
  26              	 .file 1 "C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1134:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1135:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1136:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1254:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1255:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1256:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1275:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1276:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1277:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1319:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
1320:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1321:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1343:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1344:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1345:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1528:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1547:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1682:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1683:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1684:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1705:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1826:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1827:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1828:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
1843:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1844:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
1845:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1861 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1862:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
  43              	 .loc 1 1862 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F81431 	 ldr r3,[r3,#276]
  46 000e 03F48053 	 and r3,r3,#4096
  47 0012 002B     	 cmp r3,#0
  48 0014 14BF     	 ite ne
  49 0016 0123     	 movne r3,#1
  50 0018 0023     	 moveq r3,#0
  51 001a DBB2     	 uxtb r3,r3
1863:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
  52              	 .loc 1 1863 0
  53 001c 1846     	 mov r0,r3
  54 001e 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0020 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0022 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0026 7047     	 bx lr
  66              	 .cfi_endproc
  67              	.LFE180:
  69              	 .section .text.XMC_USIC_CH_TXFIFO_IsEmpty,"ax",%progbits
  70              	 .align 2
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_USIC_CH_TXFIFO_IsEmpty:
  75              	.LFB181:
1864:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** {
  76              	 .loc 1 1881 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80              	 
  81 0000 80B4     	 push {r7}
  82              	.LCFI6:
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 7,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	.LCFI7:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI8:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
1882:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
  92              	 .loc 1 1882 0
  93 0008 7B68     	 ldr r3,[r7,#4]
  94 000a D3F81431 	 ldr r3,[r3,#276]
  95 000e 03F40063 	 and r3,r3,#2048
  96 0012 002B     	 cmp r3,#0
  97 0014 14BF     	 ite ne
  98 0016 0123     	 movne r3,#1
  99 0018 0023     	 moveq r3,#0
 100 001a DBB2     	 uxtb r3,r3
1883:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_usic.h **** }
 101              	 .loc 1 1883 0
 102 001c 1846     	 mov r0,r3
 103 001e 0C37     	 adds r7,r7,#12
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 4
 106 0020 BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 0022 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI11:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0026 7047     	 bx lr
 115              	 .cfi_endproc
 116              	.LFE181:
 118              	 .section .text.XMC_I2C_CH_GetStatusFlag,"ax",%progbits
 119              	 .align 2
 120              	 .thumb
 121              	 .thumb_func
 123              	XMC_I2C_CH_GetStatusFlag:
 124              	.LFB244:
 125              	 .file 2 "C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2020-12-05
   4:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
   7:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.
  11:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  12:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  14:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * do so, all subject to the following:
  20:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  21:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * a source language processor.
  27:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  28:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
  40:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  41:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  42:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  43:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  44:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  45:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  46:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  47:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  48:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  49:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  50:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  51:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  52:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  53:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  54:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  55:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  56:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  57:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  58:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  59:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  60:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  61:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  62:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  63:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  64:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  65:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  66:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  68:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  69:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  70:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  71:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  72:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  73:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  74:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  75:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  76:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  77:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  78:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  79:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  80:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  82:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  83:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  84:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  85:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  86:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-12-10:
  87:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetHoldDelay()
  88:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  89:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2020-12-05:
  90:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *    - Added XMC_I2C_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  91:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  92:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond
  93:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  94:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  95:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
  96:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  97:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  98:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 100:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
 101:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 102:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 103:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
 104:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 105:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 106:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 108:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 109:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 110:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 111:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 112:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family.
 113:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 114:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 115:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 116:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 117:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 118:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 119:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 120:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 121:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 122:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 123:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 124:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 125:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 126:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 127:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 128:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 129:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 130:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 131:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 132:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 133:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 134:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 135:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 136:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 137:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 138:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 139:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 140:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 142:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 143:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 144:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 145:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 146:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 147:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 148:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 149:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 150:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 151:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 152:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 153:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 154:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 155:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 156:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 157:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 158:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 159:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 160:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 161:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 162:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 163:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 164:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 165:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 166:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 167:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 168:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 169:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 170:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 171:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 172:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 173:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 174:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 175:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 176:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 177:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 178:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 179:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 180:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 181:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 182:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 183:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 184:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 185:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 186:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 187:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 188:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 189:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 190:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 191:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 192:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 193:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 194:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 195:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 196:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 197:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 198:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 199:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 200:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 201:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 202:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 203:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 204:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 205:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 206:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 207:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 208:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 209:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 210:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 211:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 212:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 213:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 214:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 215:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 216:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 217:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 218:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 219:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 220:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 221:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 222:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 223:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 224:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 225:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 226:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 227:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 228:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 229:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 230:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 231:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 232:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 233:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 234:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 235:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 236:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 237:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 238:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 239:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 240:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 241:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 242:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 243:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 244:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 245:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 246:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 247:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 248:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 249:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 250:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 251:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 252:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 253:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 254:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 255:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 256:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 257:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 258:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 259:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 260:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 261:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 262:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 263:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 264:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 265:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 266:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 267:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 268:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 269:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 270:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 271:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 272:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 273:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 274:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 275:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address
 276:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 277:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 278:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 279:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 280:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 281:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 282:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 283:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 284:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 285:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 286:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 287:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 288:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 289:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 290:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 291:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 292:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 293:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 294:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 295:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 296:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 297:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 298:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 299:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 300:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 301:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 303:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 304:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 305:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config, bool 
 306:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 307:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 308:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 309:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 310:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 311:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 312:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 313:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 314:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 315:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 316:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 317:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 318:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 319:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 321:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 322:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 323:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const
 324:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 325:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_InitEx(channel, config, true);
 326:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 327:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 328:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 329:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 330:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 331:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 332:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 333:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 335:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 336:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 337:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 338:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 339:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 340:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 341:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 342:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 343:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 344:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 345:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 346:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 347:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 348:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 349:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 350:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 351:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 352:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 353:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 354:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 356:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 357:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 359:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 360:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 361:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 362:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 363:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 364:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 365:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 366:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 367:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 368:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 369:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 370:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 371:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 372:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 373:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 375:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 376:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 377:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 378:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 379:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 380:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 381:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 382:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 383:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 384:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 385:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 386:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 387:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 388:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 389:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 390:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 391:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 392:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 393:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 394:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 395:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 396:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 397:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 398:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 399:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 400:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 401:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 402:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 403:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 404:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 405:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 406:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 407:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 408:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 409:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 410:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 411:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 412:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 413:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 414:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 415:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 416:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 417:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint8_t service_request)
 418:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 419:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 420:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 421:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 422:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 423:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 424:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 425:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 426:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 427:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 428:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 429:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 430:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 431:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 432:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 433:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 434:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 435:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 436:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 437:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 438:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 439:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 440:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 441:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 442:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****     const XMC_I2C_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 444:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint32_t service_request)
 445:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 446:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 447:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****                                       (uint32_t)service_request);
 448:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 449:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 450:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 451:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 452:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 453:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 454:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 455:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 456:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 457:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 458:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 459:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 460:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 461:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 462:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 463:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 464:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 465:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 466:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 467:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 468:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 469:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 470:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 471:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 472:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 473:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 474:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 475:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 476:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 477:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 478:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 479:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 480:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 481:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 482:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 483:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 484:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 485:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 486:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 487:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 488:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 489:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 490:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 491:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 492:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 493:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 494:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 495:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 496:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 497:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 498:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 499:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 500:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 501:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 502:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 503:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 504:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 505:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 506:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 507:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 508:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 509:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 510:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 511:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 512:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 513:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 514:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 515:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 516:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 517:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 518:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 519:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 520:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 521:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 522:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 523:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 524:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 525:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 526:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 527:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 528:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 529:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 530:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 531:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 532:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 533:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 534:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 535:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 536:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 537:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 538:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 539:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 540:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 541:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 542:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 543:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 544:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 545:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 546:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 547:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 548:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 549:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 550:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 551:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 552:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 553:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 554:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 555:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 556:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 557:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 558:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 559:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 560:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 561:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 562:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 563:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 564:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 565:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 566:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 567:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 568:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 569:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 570:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 571:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 572:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 573:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 574:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 575:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 576:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 577:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 578:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 580:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 581:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 583:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 584:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 585:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 586:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 587:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 588:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 589:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 590:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 591:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 592:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 593:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 594:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 595:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 596:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 597:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 598:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 599:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 600:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 601:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 602:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 603:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 604:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 605:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 606:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 607:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 608:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 609:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 610:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 611:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 612:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 613:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 614:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 615:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 616:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 617:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 618:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 619:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 620:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 621:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 622:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 623:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 624:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 625:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 626:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 627:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 628:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 629:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 630:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 631:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 632:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 633:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 634:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 635:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 636:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 637:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 638:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 639:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 640:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 641:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 642:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 643:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 644:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 645:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 646:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 647:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 648:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 649:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 650:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 651:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 652:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 653:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 654:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 655:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 656:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 657:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 658:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 659:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 660:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 661:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 662:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 663:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 664:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 665:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 666:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 667:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 668:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 669:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 670:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 671:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 672:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 673:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 674:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 675:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 676:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   return ((uint8_t)((channel->RBUF) >> 8U));
 677:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 678:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 679:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 680:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 681:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 682:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 683:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 684:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 685:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 686:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 687:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 688:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 689:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 690:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 691:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 692:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 693:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 694:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 695:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 696:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 697:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 698:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 699:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 700:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 701:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 702:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 703:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 704:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 705:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 706:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 707:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 708:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 709:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 710:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 711:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 712:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 713:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 714:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 715:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 716:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 126              	 .loc 2 716 0
 127              	 .cfi_startproc
 128              	 
 129              	 
 130              	 
 131 0000 80B4     	 push {r7}
 132              	.LCFI12:
 133              	 .cfi_def_cfa_offset 4
 134              	 .cfi_offset 7,-4
 135 0002 83B0     	 sub sp,sp,#12
 136              	.LCFI13:
 137              	 .cfi_def_cfa_offset 16
 138 0004 00AF     	 add r7,sp,#0
 139              	.LCFI14:
 140              	 .cfi_def_cfa_register 7
 141 0006 7860     	 str r0,[r7,#4]
 717:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 142              	 .loc 2 717 0
 143 0008 7B68     	 ldr r3,[r7,#4]
 144 000a 9B6C     	 ldr r3,[r3,#72]
 718:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 145              	 .loc 2 718 0
 146 000c 1846     	 mov r0,r3
 147 000e 0C37     	 adds r7,r7,#12
 148              	.LCFI15:
 149              	 .cfi_def_cfa_offset 4
 150 0010 BD46     	 mov sp,r7
 151              	.LCFI16:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0012 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI17:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0016 7047     	 bx lr
 159              	 .cfi_endproc
 160              	.LFE244:
 162              	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	XMC_I2C_CH_ClearStatusFlag:
 168              	.LFB245:
 719:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** 
 720:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 721:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 722:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 723:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 724:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 725:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 726:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 727:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 728:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 729:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 730:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 731:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 732:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** {
 169              	 .loc 2 732 0
 170              	 .cfi_startproc
 171              	 
 172              	 
 173              	 
 174 0000 80B4     	 push {r7}
 175              	.LCFI18:
 176              	 .cfi_def_cfa_offset 4
 177              	 .cfi_offset 7,-4
 178 0002 83B0     	 sub sp,sp,#12
 179              	.LCFI19:
 180              	 .cfi_def_cfa_offset 16
 181 0004 00AF     	 add r7,sp,#0
 182              	.LCFI20:
 183              	 .cfi_def_cfa_register 7
 184 0006 7860     	 str r0,[r7,#4]
 185 0008 3960     	 str r1,[r7]
 733:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 186              	 .loc 2 733 0
 187 000a 7B68     	 ldr r3,[r7,#4]
 188 000c DA6C     	 ldr r2,[r3,#76]
 189 000e 3B68     	 ldr r3,[r7]
 190 0010 1A43     	 orrs r2,r2,r3
 191 0012 7B68     	 ldr r3,[r7,#4]
 192 0014 DA64     	 str r2,[r3,#76]
 734:C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc\xmc_i2c.h **** }
 193              	 .loc 2 734 0
 194 0016 0C37     	 adds r7,r7,#12
 195              	.LCFI21:
 196              	 .cfi_def_cfa_offset 4
 197 0018 BD46     	 mov sp,r7
 198              	.LCFI22:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 001a 5DF8047B 	 ldr r7,[sp],#4
 202              	.LCFI23:
 203              	 .cfi_restore 7
 204              	 .cfi_def_cfa_offset 0
 205 001e 7047     	 bx lr
 206              	 .cfi_endproc
 207              	.LFE245:
 209              	 .section .bss.SSD1306_Buffer,"aw",%nobits
 210              	 .align 2
 213              	SSD1306_Buffer:
 214 0000 00000000 	 .space 520
 214      00000000 
 214      00000000 
 214      00000000 
 214      00000000 
 215              	 .comm SSD1306,16,4
 216              	 .section .text.ssd1306_Reset,"ax",%progbits
 217              	 .align 2
 218              	 .global ssd1306_Reset
 219              	 .thumb
 220              	 .thumb_func
 222              	ssd1306_Reset:
 223              	.LFB264:
 224              	 .file 3 "../SSD1306/ssd1306.c"
   1:../SSD1306/ssd1306.c **** #include "ssd1306.h"
   2:../SSD1306/ssd1306.c **** #include <math.h>
   3:../SSD1306/ssd1306.c **** #include <stdlib.h>
   4:../SSD1306/ssd1306.c **** #include <string.h>  // For memcpy
   5:../SSD1306/ssd1306.c **** 
   6:../SSD1306/ssd1306.c **** // Screenbuffer
   7:../SSD1306/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_BUFFER_SIZE];
   8:../SSD1306/ssd1306.c **** 
   9:../SSD1306/ssd1306.c **** // Screen object
  10:../SSD1306/ssd1306.c **** SSD1306_t SSD1306;
  11:../SSD1306/ssd1306.c **** 
  12:../SSD1306/ssd1306.c **** #if defined(SSD1306_USE_I2C)
  13:../SSD1306/ssd1306.c **** 
  14:../SSD1306/ssd1306.c **** void ssd1306_Reset(void) {
 225              	 .loc 3 14 0
 226              	 .cfi_startproc
 227              	 
 228              	 
 229              	 
 230 0000 80B4     	 push {r7}
 231              	.LCFI24:
 232              	 .cfi_def_cfa_offset 4
 233              	 .cfi_offset 7,-4
 234 0002 00AF     	 add r7,sp,#0
 235              	.LCFI25:
 236              	 .cfi_def_cfa_register 7
  15:../SSD1306/ssd1306.c ****     /* for I2C - do nothing */
  16:../SSD1306/ssd1306.c **** }
 237              	 .loc 3 16 0
 238 0004 BD46     	 mov sp,r7
 239              	.LCFI26:
 240              	 .cfi_def_cfa_register 13
 241              	 
 242 0006 5DF8047B 	 ldr r7,[sp],#4
 243              	.LCFI27:
 244              	 .cfi_restore 7
 245              	 .cfi_def_cfa_offset 0
 246 000a 7047     	 bx lr
 247              	 .cfi_endproc
 248              	.LFE264:
 250              	 .section .text.ssd1306_WriteCommand,"ax",%progbits
 251              	 .align 2
 252              	 .global ssd1306_WriteCommand
 253              	 .thumb
 254              	 .thumb_func
 256              	ssd1306_WriteCommand:
 257              	.LFB265:
  17:../SSD1306/ssd1306.c **** 
  18:../SSD1306/ssd1306.c **** // Send a byte to the command register
  19:../SSD1306/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
 258              	 .loc 3 19 0
 259              	 .cfi_startproc
 260              	 
 261              	 
 262 0000 80B5     	 push {r7,lr}
 263              	.LCFI28:
 264              	 .cfi_def_cfa_offset 8
 265              	 .cfi_offset 7,-8
 266              	 .cfi_offset 14,-4
 267 0002 82B0     	 sub sp,sp,#8
 268              	.LCFI29:
 269              	 .cfi_def_cfa_offset 16
 270 0004 00AF     	 add r7,sp,#0
 271              	.LCFI30:
 272              	 .cfi_def_cfa_register 7
 273 0006 0346     	 mov r3,r0
 274 0008 FB71     	 strb r3,[r7,#7]
  20:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_MasterStart(SSD1306.channel, SSD1306_I2C_ADDR, XMC_I2C_CH_CMD_WRITE);
 275              	 .loc 3 20 0
 276 000a 274B     	 ldr r3,.L17
 277 000c 9B68     	 ldr r3,[r3,#8]
 278 000e 1846     	 mov r0,r3
 279 0010 7821     	 movs r1,#120
 280 0012 0022     	 movs r2,#0
 281 0014 FFF7FEFF 	 bl XMC_I2C_CH_MasterStart
  21:../SSD1306/ssd1306.c **** 	while ((XMC_I2C_CH_GetStatusFlag(SSD1306.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U) __
 282              	 .loc 3 21 0
 283 0018 00E0     	 b .L10
 284              	.L11:
 285              	 .loc 3 21 0 is_stmt 0 discriminator 2
 286              	
 287 001a 00BF     	 nop
 288              	
 289              	 .thumb
 290              	.L10:
 291              	 .loc 3 21 0 discriminator 1
 292 001c 224B     	 ldr r3,.L17
 293 001e 9B68     	 ldr r3,[r3,#8]
 294 0020 1846     	 mov r0,r3
 295 0022 FFF7FEFF 	 bl XMC_I2C_CH_GetStatusFlag
 296 0026 0346     	 mov r3,r0
 297 0028 03F40073 	 and r3,r3,#512
 298 002c 002B     	 cmp r3,#0
 299 002e F4D0     	 beq .L11
  22:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_ClearStatusFlag(SSD1306.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 300              	 .loc 3 22 0 is_stmt 1
 301 0030 1D4B     	 ldr r3,.L17
 302 0032 9B68     	 ldr r3,[r3,#8]
 303 0034 1846     	 mov r0,r3
 304 0036 4FF40071 	 mov r1,#512
 305 003a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
  23:../SSD1306/ssd1306.c **** 
  24:../SSD1306/ssd1306.c **** 	while (XMC_USIC_CH_TXFIFO_IsFull(SSD1306.channel)) __NOP();
 306              	 .loc 3 24 0
 307 003e 00E0     	 b .L12
 308              	.L13:
 309              	 .loc 3 24 0 is_stmt 0 discriminator 2
 310              	
 311 0040 00BF     	 nop
 312              	
 313              	 .thumb
 314              	.L12:
 315              	 .loc 3 24 0 discriminator 1
 316 0042 194B     	 ldr r3,.L17
 317 0044 9B68     	 ldr r3,[r3,#8]
 318 0046 1846     	 mov r0,r3
 319 0048 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 320 004c 0346     	 mov r3,r0
 321 004e 002B     	 cmp r3,#0
 322 0050 F6D1     	 bne .L13
  25:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_MasterTransmit(SSD1306.channel, 0x00);
 323              	 .loc 3 25 0 is_stmt 1
 324 0052 154B     	 ldr r3,.L17
 325 0054 9B68     	 ldr r3,[r3,#8]
 326 0056 1846     	 mov r0,r3
 327 0058 0021     	 movs r1,#0
 328 005a FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
  26:../SSD1306/ssd1306.c **** 	while (XMC_USIC_CH_TXFIFO_IsFull(SSD1306.channel)) __NOP();
 329              	 .loc 3 26 0
 330 005e 00E0     	 b .L14
 331              	.L15:
 332              	 .loc 3 26 0 is_stmt 0 discriminator 2
 333              	
 334 0060 00BF     	 nop
 335              	
 336              	 .thumb
 337              	.L14:
 338              	 .loc 3 26 0 discriminator 1
 339 0062 114B     	 ldr r3,.L17
 340 0064 9B68     	 ldr r3,[r3,#8]
 341 0066 1846     	 mov r0,r3
 342 0068 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 343 006c 0346     	 mov r3,r0
 344 006e 002B     	 cmp r3,#0
 345 0070 F6D1     	 bne .L15
  27:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_MasterTransmit(SSD1306.channel, byte);
 346              	 .loc 3 27 0 is_stmt 1
 347 0072 0D4B     	 ldr r3,.L17
 348 0074 9A68     	 ldr r2,[r3,#8]
 349 0076 FB79     	 ldrb r3,[r7,#7]
 350 0078 1046     	 mov r0,r2
 351 007a 1946     	 mov r1,r3
 352 007c FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
  28:../SSD1306/ssd1306.c **** 	while (!XMC_USIC_CH_TXFIFO_IsEmpty(SSD1306.channel));
 353              	 .loc 3 28 0
 354 0080 00BF     	 nop
 355              	.L16:
 356              	 .loc 3 28 0 is_stmt 0 discriminator 1
 357 0082 094B     	 ldr r3,.L17
 358 0084 9B68     	 ldr r3,[r3,#8]
 359 0086 1846     	 mov r0,r3
 360 0088 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsEmpty
 361 008c 0346     	 mov r3,r0
 362 008e 83F00103 	 eor r3,r3,#1
 363 0092 DBB2     	 uxtb r3,r3
 364 0094 002B     	 cmp r3,#0
 365 0096 F4D1     	 bne .L16
  29:../SSD1306/ssd1306.c **** 
  30:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_MasterStop(SSD1306.channel);
 366              	 .loc 3 30 0 is_stmt 1
 367 0098 034B     	 ldr r3,.L17
 368 009a 9B68     	 ldr r3,[r3,#8]
 369 009c 1846     	 mov r0,r3
 370 009e FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
  31:../SSD1306/ssd1306.c **** }
 371              	 .loc 3 31 0
 372 00a2 0837     	 adds r7,r7,#8
 373              	.LCFI31:
 374              	 .cfi_def_cfa_offset 8
 375 00a4 BD46     	 mov sp,r7
 376              	.LCFI32:
 377              	 .cfi_def_cfa_register 13
 378              	 
 379 00a6 80BD     	 pop {r7,pc}
 380              	.L18:
 381              	 .align 2
 382              	.L17:
 383 00a8 00000000 	 .word SSD1306
 384              	 .cfi_endproc
 385              	.LFE265:
 387              	 .section .text.ssd1306_WriteData,"ax",%progbits
 388              	 .align 2
 389              	 .global ssd1306_WriteData
 390              	 .thumb
 391              	 .thumb_func
 393              	ssd1306_WriteData:
 394              	.LFB266:
  32:../SSD1306/ssd1306.c **** 
  33:../SSD1306/ssd1306.c **** // Send data
  34:../SSD1306/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
 395              	 .loc 3 34 0
 396              	 .cfi_startproc
 397              	 
 398              	 
 399 0000 80B5     	 push {r7,lr}
 400              	.LCFI33:
 401              	 .cfi_def_cfa_offset 8
 402              	 .cfi_offset 7,-8
 403              	 .cfi_offset 14,-4
 404 0002 84B0     	 sub sp,sp,#16
 405              	.LCFI34:
 406              	 .cfi_def_cfa_offset 24
 407 0004 00AF     	 add r7,sp,#0
 408              	.LCFI35:
 409              	 .cfi_def_cfa_register 7
 410 0006 7860     	 str r0,[r7,#4]
 411 0008 3960     	 str r1,[r7]
  35:../SSD1306/ssd1306.c **** //    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DE
  36:../SSD1306/ssd1306.c **** 
  37:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_MasterStart(SSD1306.channel, SSD1306_I2C_ADDR, XMC_I2C_CH_CMD_WRITE);
 412              	 .loc 3 37 0
 413 000a 2E4B     	 ldr r3,.L29
 414 000c 9B68     	 ldr r3,[r3,#8]
 415 000e 1846     	 mov r0,r3
 416 0010 7821     	 movs r1,#120
 417 0012 0022     	 movs r2,#0
 418 0014 FFF7FEFF 	 bl XMC_I2C_CH_MasterStart
  38:../SSD1306/ssd1306.c **** 	while ((XMC_I2C_CH_GetStatusFlag(SSD1306.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U) __
 419              	 .loc 3 38 0
 420 0018 00E0     	 b .L20
 421              	.L21:
 422              	 .loc 3 38 0 is_stmt 0 discriminator 2
 423              	
 424 001a 00BF     	 nop
 425              	
 426              	 .thumb
 427              	.L20:
 428              	 .loc 3 38 0 discriminator 1
 429 001c 294B     	 ldr r3,.L29
 430 001e 9B68     	 ldr r3,[r3,#8]
 431 0020 1846     	 mov r0,r3
 432 0022 FFF7FEFF 	 bl XMC_I2C_CH_GetStatusFlag
 433 0026 0346     	 mov r3,r0
 434 0028 03F40073 	 and r3,r3,#512
 435 002c 002B     	 cmp r3,#0
 436 002e F4D0     	 beq .L21
  39:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_ClearStatusFlag(SSD1306.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 437              	 .loc 3 39 0 is_stmt 1
 438 0030 244B     	 ldr r3,.L29
 439 0032 9B68     	 ldr r3,[r3,#8]
 440 0034 1846     	 mov r0,r3
 441 0036 4FF40071 	 mov r1,#512
 442 003a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
  40:../SSD1306/ssd1306.c **** 
  41:../SSD1306/ssd1306.c **** 	while (XMC_USIC_CH_TXFIFO_IsFull(SSD1306.channel)) __NOP();
 443              	 .loc 3 41 0
 444 003e 00E0     	 b .L22
 445              	.L23:
 446              	 .loc 3 41 0 is_stmt 0 discriminator 2
 447              	
 448 0040 00BF     	 nop
 449              	
 450              	 .thumb
 451              	.L22:
 452              	 .loc 3 41 0 discriminator 1
 453 0042 204B     	 ldr r3,.L29
 454 0044 9B68     	 ldr r3,[r3,#8]
 455 0046 1846     	 mov r0,r3
 456 0048 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 457 004c 0346     	 mov r3,r0
 458 004e 002B     	 cmp r3,#0
 459 0050 F6D1     	 bne .L23
  42:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_MasterTransmit(SSD1306.channel, 0x40);
 460              	 .loc 3 42 0 is_stmt 1
 461 0052 1C4B     	 ldr r3,.L29
 462 0054 9B68     	 ldr r3,[r3,#8]
 463 0056 1846     	 mov r0,r3
 464 0058 4021     	 movs r1,#64
 465 005a FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
 466              	.LBB2:
  43:../SSD1306/ssd1306.c **** 
  44:../SSD1306/ssd1306.c **** 	for (uint32_t i=0; i<buff_size; i++)
 467              	 .loc 3 44 0
 468 005e 0023     	 movs r3,#0
 469 0060 FB60     	 str r3,[r7,#12]
 470 0062 16E0     	 b .L24
 471              	.L27:
  45:../SSD1306/ssd1306.c **** 	{
  46:../SSD1306/ssd1306.c **** 		while (XMC_USIC_CH_TXFIFO_IsFull(SSD1306.channel)) __NOP();
 472              	 .loc 3 46 0
 473 0064 00E0     	 b .L25
 474              	.L26:
 475              	 .loc 3 46 0 is_stmt 0 discriminator 2
 476              	
 477 0066 00BF     	 nop
 478              	
 479              	 .thumb
 480              	.L25:
 481              	 .loc 3 46 0 discriminator 1
 482 0068 164B     	 ldr r3,.L29
 483 006a 9B68     	 ldr r3,[r3,#8]
 484 006c 1846     	 mov r0,r3
 485 006e FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 486 0072 0346     	 mov r3,r0
 487 0074 002B     	 cmp r3,#0
 488 0076 F6D1     	 bne .L26
  47:../SSD1306/ssd1306.c **** 		XMC_I2C_CH_MasterTransmit(SSD1306.channel, buffer[i]);
 489              	 .loc 3 47 0 is_stmt 1 discriminator 2
 490 0078 124B     	 ldr r3,.L29
 491 007a 9968     	 ldr r1,[r3,#8]
 492 007c 7A68     	 ldr r2,[r7,#4]
 493 007e FB68     	 ldr r3,[r7,#12]
 494 0080 1344     	 add r3,r3,r2
 495 0082 1B78     	 ldrb r3,[r3]
 496 0084 0846     	 mov r0,r1
 497 0086 1946     	 mov r1,r3
 498 0088 FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
  44:../SSD1306/ssd1306.c **** 	{
 499              	 .loc 3 44 0 discriminator 2
 500 008c FB68     	 ldr r3,[r7,#12]
 501 008e 0133     	 adds r3,r3,#1
 502 0090 FB60     	 str r3,[r7,#12]
 503              	.L24:
  44:../SSD1306/ssd1306.c **** 	{
 504              	 .loc 3 44 0 is_stmt 0 discriminator 1
 505 0092 FA68     	 ldr r2,[r7,#12]
 506 0094 3B68     	 ldr r3,[r7]
 507 0096 9A42     	 cmp r2,r3
 508 0098 E4D3     	 bcc .L27
 509              	.LBE2:
  48:../SSD1306/ssd1306.c **** 	}
  49:../SSD1306/ssd1306.c **** 
  50:../SSD1306/ssd1306.c **** 	while (!XMC_USIC_CH_TXFIFO_IsEmpty(SSD1306.channel));
 510              	 .loc 3 50 0 is_stmt 1
 511 009a 00BF     	 nop
 512              	.L28:
 513              	 .loc 3 50 0 is_stmt 0 discriminator 1
 514 009c 094B     	 ldr r3,.L29
 515 009e 9B68     	 ldr r3,[r3,#8]
 516 00a0 1846     	 mov r0,r3
 517 00a2 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsEmpty
 518 00a6 0346     	 mov r3,r0
 519 00a8 83F00103 	 eor r3,r3,#1
 520 00ac DBB2     	 uxtb r3,r3
 521 00ae 002B     	 cmp r3,#0
 522 00b0 F4D1     	 bne .L28
  51:../SSD1306/ssd1306.c **** 
  52:../SSD1306/ssd1306.c **** 	XMC_I2C_CH_MasterStop(SSD1306.channel);
 523              	 .loc 3 52 0 is_stmt 1
 524 00b2 044B     	 ldr r3,.L29
 525 00b4 9B68     	 ldr r3,[r3,#8]
 526 00b6 1846     	 mov r0,r3
 527 00b8 FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
  53:../SSD1306/ssd1306.c **** }
 528              	 .loc 3 53 0
 529 00bc 1037     	 adds r7,r7,#16
 530              	.LCFI36:
 531              	 .cfi_def_cfa_offset 8
 532 00be BD46     	 mov sp,r7
 533              	.LCFI37:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 00c0 80BD     	 pop {r7,pc}
 537              	.L30:
 538 00c2 00BF     	 .align 2
 539              	.L29:
 540 00c4 00000000 	 .word SSD1306
 541              	 .cfi_endproc
 542              	.LFE266:
 544              	 .section .text.ssd1306_FillBuffer,"ax",%progbits
 545              	 .align 2
 546              	 .global ssd1306_FillBuffer
 547              	 .thumb
 548              	 .thumb_func
 550              	ssd1306_FillBuffer:
 551              	.LFB267:
  54:../SSD1306/ssd1306.c **** 
  55:../SSD1306/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
  56:../SSD1306/ssd1306.c **** 
  57:../SSD1306/ssd1306.c **** void ssd1306_Reset(void) {
  58:../SSD1306/ssd1306.c ****     // Reset the OLED
  59:../SSD1306/ssd1306.c **** 	XMC_GPIO_SetOutputLevel(SSD1306.rst_port, SSD1306.rst_pin, XMC_GPIO_OUTPUT_LEVEL_LOW);
  60:../SSD1306/ssd1306.c **** 	SSD1306.delay_fnc(10);
  61:../SSD1306/ssd1306.c **** 	XMC_GPIO_SetOutputLevel(SSD1306.rst_port, SSD1306.rst_pin, XMC_GPIO_OUTPUT_LEVEL_HIGH);
  62:../SSD1306/ssd1306.c **** 	SSD1306.delay_fnc(10);
  63:../SSD1306/ssd1306.c **** }
  64:../SSD1306/ssd1306.c **** 
  65:../SSD1306/ssd1306.c **** // Send a byte to the command register
  66:../SSD1306/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  67:../SSD1306/ssd1306.c **** 	uint8_t fallingEdge = 0;
  68:../SSD1306/ssd1306.c **** 
  69:../SSD1306/ssd1306.c **** 	XMC_GPIO_SetOutputLevel(SSD1306.dc_port, SSD1306.dc_pin, XMC_GPIO_OUTPUT_LEVEL_LOW);
  70:../SSD1306/ssd1306.c **** 
  71:../SSD1306/ssd1306.c **** 	while (XMC_USIC_CH_TXFIFO_IsFull(SSD1306.channel)) __NOP();
  72:../SSD1306/ssd1306.c **** 	XMC_SPI_CH_Transmit(SSD1306.channel, byte, XMC_SPI_CH_MODE_STANDARD);
  73:../SSD1306/ssd1306.c **** 
  74:../SSD1306/ssd1306.c **** 	while (fallingEdge == 0)
  75:../SSD1306/ssd1306.c **** 	{
  76:../SSD1306/ssd1306.c **** 		XMC_SPI_CH_ClearStatusFlag(SSD1306.channel, XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED);
  77:../SSD1306/ssd1306.c **** 		while (!(XMC_SPI_CH_GetStatusFlag(SSD1306.channel) & XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED))
  78:../SSD1306/ssd1306.c **** 		if (XMC_SPI_CH_GetStatusFlag(SSD1306.channel) & XMC_SPI_CH_STATUS_FLAG_MSLS)
  79:../SSD1306/ssd1306.c **** 			fallingEdge = 0;
  80:../SSD1306/ssd1306.c **** 		else
  81:../SSD1306/ssd1306.c **** 			fallingEdge = 1;
  82:../SSD1306/ssd1306.c **** 	}
  83:../SSD1306/ssd1306.c **** }
  84:../SSD1306/ssd1306.c **** 
  85:../SSD1306/ssd1306.c **** // Send data
  86:../SSD1306/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  87:../SSD1306/ssd1306.c **** 	uint8_t fallingEdge = 0;
  88:../SSD1306/ssd1306.c **** 
  89:../SSD1306/ssd1306.c **** 	XMC_GPIO_SetOutputLevel(SSD1306.dc_port, SSD1306.dc_pin, XMC_GPIO_OUTPUT_LEVEL_HIGH);
  90:../SSD1306/ssd1306.c **** 
  91:../SSD1306/ssd1306.c **** 	for (uint32_t i=0; i< buff_size; i++)
  92:../SSD1306/ssd1306.c **** 	{
  93:../SSD1306/ssd1306.c **** 		while (XMC_USIC_CH_TXFIFO_IsFull(SSD1306.channel)) __NOP();
  94:../SSD1306/ssd1306.c **** 		XMC_SPI_CH_Transmit(SSD1306.channel, buffer[i], XMC_SPI_CH_MODE_STANDARD);
  95:../SSD1306/ssd1306.c **** 	}
  96:../SSD1306/ssd1306.c **** 
  97:../SSD1306/ssd1306.c **** 	while (fallingEdge == 0)
  98:../SSD1306/ssd1306.c **** 	{
  99:../SSD1306/ssd1306.c **** 		XMC_SPI_CH_ClearStatusFlag(SSD1306.channel, XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED);
 100:../SSD1306/ssd1306.c **** 		while (!(XMC_SPI_CH_GetStatusFlag(SSD1306.channel) & XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED))
 101:../SSD1306/ssd1306.c **** 		if (XMC_SPI_CH_GetStatusFlag(SSD1306.channel) & XMC_SPI_CH_STATUS_FLAG_MSLS)
 102:../SSD1306/ssd1306.c **** 			fallingEdge = 0;
 103:../SSD1306/ssd1306.c **** 		else
 104:../SSD1306/ssd1306.c **** 			fallingEdge = 1;
 105:../SSD1306/ssd1306.c **** 	}
 106:../SSD1306/ssd1306.c **** }
 107:../SSD1306/ssd1306.c **** 
 108:../SSD1306/ssd1306.c **** #else
 109:../SSD1306/ssd1306.c **** #error "You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro"
 110:../SSD1306/ssd1306.c **** #endif
 111:../SSD1306/ssd1306.c **** 
 112:../SSD1306/ssd1306.c **** /* Fills the Screenbuffer with values from a given buffer of a fixed length */
 113:../SSD1306/ssd1306.c **** SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len) {
 552              	 .loc 3 113 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556 0000 80B5     	 push {r7,lr}
 557              	.LCFI38:
 558              	 .cfi_def_cfa_offset 8
 559              	 .cfi_offset 7,-8
 560              	 .cfi_offset 14,-4
 561 0002 84B0     	 sub sp,sp,#16
 562              	.LCFI39:
 563              	 .cfi_def_cfa_offset 24
 564 0004 00AF     	 add r7,sp,#0
 565              	.LCFI40:
 566              	 .cfi_def_cfa_register 7
 567 0006 7860     	 str r0,[r7,#4]
 568 0008 3960     	 str r1,[r7]
 114:../SSD1306/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 569              	 .loc 3 114 0
 570 000a 0123     	 movs r3,#1
 571 000c FB73     	 strb r3,[r7,#15]
 115:../SSD1306/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 572              	 .loc 3 115 0
 573 000e 3B68     	 ldr r3,[r7]
 574 0010 B3F5027F 	 cmp r3,#520
 575 0014 06D8     	 bhi .L32
 116:../SSD1306/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 576              	 .loc 3 116 0
 577 0016 0648     	 ldr r0,.L34
 578 0018 7968     	 ldr r1,[r7,#4]
 579 001a 3A68     	 ldr r2,[r7]
 580 001c FFF7FEFF 	 bl memcpy
 117:../SSD1306/ssd1306.c ****         ret = SSD1306_OK;
 581              	 .loc 3 117 0
 582 0020 0023     	 movs r3,#0
 583 0022 FB73     	 strb r3,[r7,#15]
 584              	.L32:
 118:../SSD1306/ssd1306.c ****     }
 119:../SSD1306/ssd1306.c ****     return ret;
 585              	 .loc 3 119 0
 586 0024 FB7B     	 ldrb r3,[r7,#15]
 120:../SSD1306/ssd1306.c **** }
 587              	 .loc 3 120 0
 588 0026 1846     	 mov r0,r3
 589 0028 1037     	 adds r7,r7,#16
 590              	.LCFI41:
 591              	 .cfi_def_cfa_offset 8
 592 002a BD46     	 mov sp,r7
 593              	.LCFI42:
 594              	 .cfi_def_cfa_register 13
 595              	 
 596 002c 80BD     	 pop {r7,pc}
 597              	.L35:
 598 002e 00BF     	 .align 2
 599              	.L34:
 600 0030 00000000 	 .word SSD1306_Buffer
 601              	 .cfi_endproc
 602              	.LFE267:
 604              	 .section .text.ssd1306_Init,"ax",%progbits
 605              	 .align 2
 606              	 .global ssd1306_Init
 607              	 .thumb
 608              	 .thumb_func
 610              	ssd1306_Init:
 611              	.LFB268:
 121:../SSD1306/ssd1306.c **** 
 122:../SSD1306/ssd1306.c **** // Initialize the oled screen
 123:../SSD1306/ssd1306.c **** #if defined(SSD1306_USE_I2C)
 124:../SSD1306/ssd1306.c **** void ssd1306_Init(XMC_USIC_CH_t* channel, void(*delay_fnc)(uint32_t)) {
 612              	 .loc 3 124 0
 613              	 .cfi_startproc
 614              	 
 615              	 
 616 0000 80B5     	 push {r7,lr}
 617              	.LCFI43:
 618              	 .cfi_def_cfa_offset 8
 619              	 .cfi_offset 7,-8
 620              	 .cfi_offset 14,-4
 621 0002 82B0     	 sub sp,sp,#8
 622              	.LCFI44:
 623              	 .cfi_def_cfa_offset 16
 624 0004 00AF     	 add r7,sp,#0
 625              	.LCFI45:
 626              	 .cfi_def_cfa_register 7
 627 0006 7860     	 str r0,[r7,#4]
 628 0008 3960     	 str r1,[r7]
 125:../SSD1306/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
 126:../SSD1306/ssd1306.c **** void ssd1306_Init(XMC_USIC_CH_t* channel, XMC_GPIO_PORT_t* rst_port, uint8_t rst_pin, XMC_GPIO_PORT
 127:../SSD1306/ssd1306.c **** 	SSD1306.rst_port = rst_port;
 128:../SSD1306/ssd1306.c **** 	SSD1306.rst_pin = rst_pin;
 129:../SSD1306/ssd1306.c **** 	SSD1306.dc_port = dc_port;
 130:../SSD1306/ssd1306.c **** 	SSD1306.dc_pin = dc_pin;
 131:../SSD1306/ssd1306.c **** #endif
 132:../SSD1306/ssd1306.c **** 	SSD1306.channel = channel;
 629              	 .loc 3 132 0
 630 000a 374A     	 ldr r2,.L37
 631 000c 7B68     	 ldr r3,[r7,#4]
 632 000e 9360     	 str r3,[r2,#8]
 133:../SSD1306/ssd1306.c **** 	SSD1306.delay_fnc = delay_fnc;
 633              	 .loc 3 133 0
 634 0010 354A     	 ldr r2,.L37
 635 0012 3B68     	 ldr r3,[r7]
 636 0014 D360     	 str r3,[r2,#12]
 134:../SSD1306/ssd1306.c **** 
 135:../SSD1306/ssd1306.c ****     // Reset OLED
 136:../SSD1306/ssd1306.c ****     ssd1306_Reset();
 637              	 .loc 3 136 0
 638 0016 FFF7FEFF 	 bl ssd1306_Reset
 137:../SSD1306/ssd1306.c **** 
 138:../SSD1306/ssd1306.c ****     // Wait for the screen to boot
 139:../SSD1306/ssd1306.c ****     SSD1306.delay_fnc(100);
 639              	 .loc 3 139 0
 640 001a 334B     	 ldr r3,.L37
 641 001c DB68     	 ldr r3,[r3,#12]
 642 001e 6420     	 movs r0,#100
 643 0020 9847     	 blx r3
 140:../SSD1306/ssd1306.c **** 
 141:../SSD1306/ssd1306.c ****     // Init OLED
 142:../SSD1306/ssd1306.c ****     ssd1306_SetDisplayOn(0); //display off
 644              	 .loc 3 142 0
 645 0022 0020     	 movs r0,#0
 646 0024 FFF7FEFF 	 bl ssd1306_SetDisplayOn
 143:../SSD1306/ssd1306.c **** 
 144:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 647              	 .loc 3 144 0
 648 0028 2020     	 movs r0,#32
 649 002a FFF7FEFF 	 bl ssd1306_WriteCommand
 145:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 650              	 .loc 3 145 0
 651 002e 0020     	 movs r0,#0
 652 0030 FFF7FEFF 	 bl ssd1306_WriteCommand
 146:../SSD1306/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 147:../SSD1306/ssd1306.c **** 
 148:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 653              	 .loc 3 148 0
 654 0034 B020     	 movs r0,#176
 655 0036 FFF7FEFF 	 bl ssd1306_WriteCommand
 149:../SSD1306/ssd1306.c **** 
 150:../SSD1306/ssd1306.c **** #ifdef SSD1306_MIRROR_VERT
 151:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xC0); // Mirror vertically
 152:../SSD1306/ssd1306.c **** #else
 153:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 656              	 .loc 3 153 0
 657 003a C820     	 movs r0,#200
 658 003c FFF7FEFF 	 bl ssd1306_WriteCommand
 154:../SSD1306/ssd1306.c **** #endif
 155:../SSD1306/ssd1306.c **** 
 156:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); //---set low column address
 659              	 .loc 3 156 0
 660 0040 0020     	 movs r0,#0
 661 0042 FFF7FEFF 	 bl ssd1306_WriteCommand
 157:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 662              	 .loc 3 157 0
 663 0046 1020     	 movs r0,#16
 664 0048 FFF7FEFF 	 bl ssd1306_WriteCommand
 158:../SSD1306/ssd1306.c **** 
 159:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 665              	 .loc 3 159 0
 666 004c 4020     	 movs r0,#64
 667 004e FFF7FEFF 	 bl ssd1306_WriteCommand
 160:../SSD1306/ssd1306.c **** 
 161:../SSD1306/ssd1306.c ****     ssd1306_SetContrast(0xFF);
 668              	 .loc 3 161 0
 669 0052 FF20     	 movs r0,#255
 670 0054 FFF7FEFF 	 bl ssd1306_SetContrast
 162:../SSD1306/ssd1306.c **** 
 163:../SSD1306/ssd1306.c **** #ifdef SSD1306_MIRROR_HORIZ
 164:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xA0); // Mirror horizontally
 165:../SSD1306/ssd1306.c **** #else
 166:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 671              	 .loc 3 166 0
 672 0058 A120     	 movs r0,#161
 673 005a FFF7FEFF 	 bl ssd1306_WriteCommand
 167:../SSD1306/ssd1306.c **** #endif
 168:../SSD1306/ssd1306.c **** 
 169:../SSD1306/ssd1306.c **** #ifdef SSD1306_INVERSE_COLOR
 170:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xA7); //--set inverse color
 171:../SSD1306/ssd1306.c **** #else
 172:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xA6); //--set normal color
 674              	 .loc 3 172 0
 675 005e A620     	 movs r0,#166
 676 0060 FFF7FEFF 	 bl ssd1306_WriteCommand
 173:../SSD1306/ssd1306.c **** #endif
 174:../SSD1306/ssd1306.c **** 
 175:../SSD1306/ssd1306.c **** // Set multiplex ratio.
 176:../SSD1306/ssd1306.c **** #if (SSD1306_HEIGHT == 128)
 177:../SSD1306/ssd1306.c ****     // Found in the Luma Python lib for SH1106.
 178:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
 179:../SSD1306/ssd1306.c **** #else
 180:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 677              	 .loc 3 180 0
 678 0064 A820     	 movs r0,#168
 679 0066 FFF7FEFF 	 bl ssd1306_WriteCommand
 181:../SSD1306/ssd1306.c **** #endif
 182:../SSD1306/ssd1306.c **** 
 183:../SSD1306/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 184:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x1F); //
 680              	 .loc 3 184 0
 681 006a 1F20     	 movs r0,#31
 682 006c FFF7FEFF 	 bl ssd1306_WriteCommand
 185:../SSD1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 186:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 187:../SSD1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 188:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x3F); // Seems to work for 128px high displays too.
 189:../SSD1306/ssd1306.c **** #else
 190:../SSD1306/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 191:../SSD1306/ssd1306.c **** #endif
 192:../SSD1306/ssd1306.c **** 
 193:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 683              	 .loc 3 193 0
 684 0070 A420     	 movs r0,#164
 685 0072 FFF7FEFF 	 bl ssd1306_WriteCommand
 194:../SSD1306/ssd1306.c **** 
 195:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 686              	 .loc 3 195 0
 687 0076 D320     	 movs r0,#211
 688 0078 FFF7FEFF 	 bl ssd1306_WriteCommand
 196:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 689              	 .loc 3 196 0
 690 007c 0020     	 movs r0,#0
 691 007e FFF7FEFF 	 bl ssd1306_WriteCommand
 197:../SSD1306/ssd1306.c **** 
 198:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 692              	 .loc 3 198 0
 693 0082 D520     	 movs r0,#213
 694 0084 FFF7FEFF 	 bl ssd1306_WriteCommand
 199:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 695              	 .loc 3 199 0
 696 0088 F020     	 movs r0,#240
 697 008a FFF7FEFF 	 bl ssd1306_WriteCommand
 200:../SSD1306/ssd1306.c **** 
 201:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xD9); //--set pre-charge period
 698              	 .loc 3 201 0
 699 008e D920     	 movs r0,#217
 700 0090 FFF7FEFF 	 bl ssd1306_WriteCommand
 202:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 701              	 .loc 3 202 0
 702 0094 2220     	 movs r0,#34
 703 0096 FFF7FEFF 	 bl ssd1306_WriteCommand
 203:../SSD1306/ssd1306.c **** 
 204:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 704              	 .loc 3 204 0
 705 009a DA20     	 movs r0,#218
 706 009c FFF7FEFF 	 bl ssd1306_WriteCommand
 205:../SSD1306/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 206:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x02);
 707              	 .loc 3 206 0
 708 00a0 0220     	 movs r0,#2
 709 00a2 FFF7FEFF 	 bl ssd1306_WriteCommand
 207:../SSD1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 208:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 209:../SSD1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 210:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 211:../SSD1306/ssd1306.c **** #else
 212:../SSD1306/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 213:../SSD1306/ssd1306.c **** #endif
 214:../SSD1306/ssd1306.c **** 
 215:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0xDB); //--set vcomh
 710              	 .loc 3 215 0
 711 00a6 DB20     	 movs r0,#219
 712 00a8 FFF7FEFF 	 bl ssd1306_WriteCommand
 216:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 713              	 .loc 3 216 0
 714 00ac 2020     	 movs r0,#32
 715 00ae FFF7FEFF 	 bl ssd1306_WriteCommand
 217:../SSD1306/ssd1306.c **** 
 218:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 716              	 .loc 3 218 0
 717 00b2 8D20     	 movs r0,#141
 718 00b4 FFF7FEFF 	 bl ssd1306_WriteCommand
 219:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 719              	 .loc 3 219 0
 720 00b8 1420     	 movs r0,#20
 721 00ba FFF7FEFF 	 bl ssd1306_WriteCommand
 220:../SSD1306/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 722              	 .loc 3 220 0
 723 00be 0120     	 movs r0,#1
 724 00c0 FFF7FEFF 	 bl ssd1306_SetDisplayOn
 221:../SSD1306/ssd1306.c **** 
 222:../SSD1306/ssd1306.c ****     // Clear screen
 223:../SSD1306/ssd1306.c ****     ssd1306_Fill(Black);
 725              	 .loc 3 223 0
 726 00c4 0020     	 movs r0,#0
 727 00c6 FFF7FEFF 	 bl ssd1306_Fill
 224:../SSD1306/ssd1306.c ****     
 225:../SSD1306/ssd1306.c ****     // Flush buffer to screen
 226:../SSD1306/ssd1306.c ****     ssd1306_UpdateScreen();
 728              	 .loc 3 226 0
 729 00ca FFF7FEFF 	 bl ssd1306_UpdateScreen
 227:../SSD1306/ssd1306.c ****     
 228:../SSD1306/ssd1306.c ****     // Set default values for screen object
 229:../SSD1306/ssd1306.c ****     SSD1306.CurrentX = 0;
 730              	 .loc 3 229 0
 731 00ce 064B     	 ldr r3,.L37
 732 00d0 0022     	 movs r2,#0
 733 00d2 1A80     	 strh r2,[r3]
 230:../SSD1306/ssd1306.c ****     SSD1306.CurrentY = 0;
 734              	 .loc 3 230 0
 735 00d4 044B     	 ldr r3,.L37
 736 00d6 0022     	 movs r2,#0
 737 00d8 5A80     	 strh r2,[r3,#2]
 231:../SSD1306/ssd1306.c ****     
 232:../SSD1306/ssd1306.c ****     SSD1306.Initialized = 1;
 738              	 .loc 3 232 0
 739 00da 034B     	 ldr r3,.L37
 740 00dc 0122     	 movs r2,#1
 741 00de 5A71     	 strb r2,[r3,#5]
 233:../SSD1306/ssd1306.c **** }
 742              	 .loc 3 233 0
 743 00e0 0837     	 adds r7,r7,#8
 744              	.LCFI46:
 745              	 .cfi_def_cfa_offset 8
 746 00e2 BD46     	 mov sp,r7
 747              	.LCFI47:
 748              	 .cfi_def_cfa_register 13
 749              	 
 750 00e4 80BD     	 pop {r7,pc}
 751              	.L38:
 752 00e6 00BF     	 .align 2
 753              	.L37:
 754 00e8 00000000 	 .word SSD1306
 755              	 .cfi_endproc
 756              	.LFE268:
 758              	 .section .text.ssd1306_Fill,"ax",%progbits
 759              	 .align 2
 760              	 .global ssd1306_Fill
 761              	 .thumb
 762              	 .thumb_func
 764              	ssd1306_Fill:
 765              	.LFB269:
 234:../SSD1306/ssd1306.c **** 
 235:../SSD1306/ssd1306.c **** // Fill the whole screen with the given color
 236:../SSD1306/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) {
 766              	 .loc 3 236 0
 767              	 .cfi_startproc
 768              	 
 769              	 
 770              	 
 771 0000 80B4     	 push {r7}
 772              	.LCFI48:
 773              	 .cfi_def_cfa_offset 4
 774              	 .cfi_offset 7,-4
 775 0002 85B0     	 sub sp,sp,#20
 776              	.LCFI49:
 777              	 .cfi_def_cfa_offset 24
 778 0004 00AF     	 add r7,sp,#0
 779              	.LCFI50:
 780              	 .cfi_def_cfa_register 7
 781 0006 0346     	 mov r3,r0
 782 0008 FB71     	 strb r3,[r7,#7]
 237:../SSD1306/ssd1306.c ****     /* Set memory */
 238:../SSD1306/ssd1306.c ****     uint32_t i;
 239:../SSD1306/ssd1306.c **** 
 240:../SSD1306/ssd1306.c ****     for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 783              	 .loc 3 240 0
 784 000a 0023     	 movs r3,#0
 785 000c FB60     	 str r3,[r7,#12]
 786 000e 0DE0     	 b .L40
 787              	.L43:
 241:../SSD1306/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 788              	 .loc 3 241 0
 789 0010 FB79     	 ldrb r3,[r7,#7]
 790 0012 002B     	 cmp r3,#0
 791 0014 01D1     	 bne .L41
 792              	 .loc 3 241 0 is_stmt 0 discriminator 1
 793 0016 0021     	 movs r1,#0
 794 0018 00E0     	 b .L42
 795              	.L41:
 796              	 .loc 3 241 0 discriminator 2
 797 001a FF21     	 movs r1,#255
 798              	.L42:
 799              	 .loc 3 241 0 discriminator 4
 800 001c 084A     	 ldr r2,.L44
 801 001e FB68     	 ldr r3,[r7,#12]
 802 0020 1344     	 add r3,r3,r2
 803 0022 0A46     	 mov r2,r1
 804 0024 1A70     	 strb r2,[r3]
 240:../SSD1306/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 805              	 .loc 3 240 0 is_stmt 1 discriminator 4
 806 0026 FB68     	 ldr r3,[r7,#12]
 807 0028 0133     	 adds r3,r3,#1
 808 002a FB60     	 str r3,[r7,#12]
 809              	.L40:
 240:../SSD1306/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 810              	 .loc 3 240 0 is_stmt 0 discriminator 2
 811 002c FB68     	 ldr r3,[r7,#12]
 812 002e B3F5027F 	 cmp r3,#520
 813 0032 EDD3     	 bcc .L43
 242:../SSD1306/ssd1306.c ****     }
 243:../SSD1306/ssd1306.c **** }
 814              	 .loc 3 243 0 is_stmt 1
 815 0034 1437     	 adds r7,r7,#20
 816              	.LCFI51:
 817              	 .cfi_def_cfa_offset 4
 818 0036 BD46     	 mov sp,r7
 819              	.LCFI52:
 820              	 .cfi_def_cfa_register 13
 821              	 
 822 0038 5DF8047B 	 ldr r7,[sp],#4
 823              	.LCFI53:
 824              	 .cfi_restore 7
 825              	 .cfi_def_cfa_offset 0
 826 003c 7047     	 bx lr
 827              	.L45:
 828 003e 00BF     	 .align 2
 829              	.L44:
 830 0040 00000000 	 .word SSD1306_Buffer
 831              	 .cfi_endproc
 832              	.LFE269:
 834              	 .section .text.ssd1306_UpdateScreen,"ax",%progbits
 835              	 .align 2
 836              	 .global ssd1306_UpdateScreen
 837              	 .thumb
 838              	 .thumb_func
 840              	ssd1306_UpdateScreen:
 841              	.LFB270:
 244:../SSD1306/ssd1306.c **** 
 245:../SSD1306/ssd1306.c **** // Write the screenbuffer with changed to the screen
 246:../SSD1306/ssd1306.c **** void ssd1306_UpdateScreen(void) {
 842              	 .loc 3 246 0
 843              	 .cfi_startproc
 844              	 
 845              	 
 846 0000 80B5     	 push {r7,lr}
 847              	.LCFI54:
 848              	 .cfi_def_cfa_offset 8
 849              	 .cfi_offset 7,-8
 850              	 .cfi_offset 14,-4
 851 0002 82B0     	 sub sp,sp,#8
 852              	.LCFI55:
 853              	 .cfi_def_cfa_offset 16
 854 0004 00AF     	 add r7,sp,#0
 855              	.LCFI56:
 856              	 .cfi_def_cfa_register 7
 857              	.LBB3:
 247:../SSD1306/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 248:../SSD1306/ssd1306.c ****     // depends on the screen height:
 249:../SSD1306/ssd1306.c ****     //
 250:../SSD1306/ssd1306.c ****     //  * 32px   ==  4 pages
 251:../SSD1306/ssd1306.c ****     //  * 64px   ==  8 pages
 252:../SSD1306/ssd1306.c ****     //  * 128px  ==  16 pages
 253:../SSD1306/ssd1306.c ****     for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 858              	 .loc 3 253 0
 859 0006 0023     	 movs r3,#0
 860 0008 FB71     	 strb r3,[r7,#7]
 861 000a 1AE0     	 b .L47
 862              	.L48:
 254:../SSD1306/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 863              	 .loc 3 254 0 discriminator 3
 864 000c FB79     	 ldrb r3,[r7,#7]
 865 000e 503B     	 subs r3,r3,#80
 866 0010 DBB2     	 uxtb r3,r3
 867 0012 1846     	 mov r0,r3
 868 0014 FFF7FEFF 	 bl ssd1306_WriteCommand
 255:../SSD1306/ssd1306.c ****         ssd1306_WriteCommand(0x00);
 869              	 .loc 3 255 0 discriminator 3
 870 0018 0020     	 movs r0,#0
 871 001a FFF7FEFF 	 bl ssd1306_WriteCommand
 256:../SSD1306/ssd1306.c ****         ssd1306_WriteCommand(0x10);
 872              	 .loc 3 256 0 discriminator 3
 873 001e 1020     	 movs r0,#16
 874 0020 FFF7FEFF 	 bl ssd1306_WriteCommand
 257:../SSD1306/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 875              	 .loc 3 257 0 discriminator 3
 876 0024 FA79     	 ldrb r2,[r7,#7]
 877 0026 1346     	 mov r3,r2
 878 0028 9B01     	 lsls r3,r3,#6
 879 002a 1344     	 add r3,r3,r2
 880 002c 5B00     	 lsls r3,r3,#1
 881 002e 1A46     	 mov r2,r3
 882 0030 074B     	 ldr r3,.L49
 883 0032 1344     	 add r3,r3,r2
 884 0034 1846     	 mov r0,r3
 885 0036 8221     	 movs r1,#130
 886 0038 FFF7FEFF 	 bl ssd1306_WriteData
 253:../SSD1306/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 887              	 .loc 3 253 0 discriminator 3
 888 003c FB79     	 ldrb r3,[r7,#7]
 889 003e 0133     	 adds r3,r3,#1
 890 0040 FB71     	 strb r3,[r7,#7]
 891              	.L47:
 253:../SSD1306/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 892              	 .loc 3 253 0 is_stmt 0 discriminator 1
 893 0042 FB79     	 ldrb r3,[r7,#7]
 894 0044 032B     	 cmp r3,#3
 895 0046 E1D9     	 bls .L48
 896              	.LBE3:
 258:../SSD1306/ssd1306.c ****     }
 259:../SSD1306/ssd1306.c **** }
 897              	 .loc 3 259 0 is_stmt 1
 898 0048 0837     	 adds r7,r7,#8
 899              	.LCFI57:
 900              	 .cfi_def_cfa_offset 8
 901 004a BD46     	 mov sp,r7
 902              	.LCFI58:
 903              	 .cfi_def_cfa_register 13
 904              	 
 905 004c 80BD     	 pop {r7,pc}
 906              	.L50:
 907 004e 00BF     	 .align 2
 908              	.L49:
 909 0050 00000000 	 .word SSD1306_Buffer
 910              	 .cfi_endproc
 911              	.LFE270:
 913              	 .section .text.ssd1306_DrawPixel,"ax",%progbits
 914              	 .align 2
 915              	 .global ssd1306_DrawPixel
 916              	 .thumb
 917              	 .thumb_func
 919              	ssd1306_DrawPixel:
 920              	.LFB271:
 260:../SSD1306/ssd1306.c **** 
 261:../SSD1306/ssd1306.c **** //    Draw one pixel in the screenbuffer
 262:../SSD1306/ssd1306.c **** //    X => X Coordinate
 263:../SSD1306/ssd1306.c **** //    Y => Y Coordinate
 264:../SSD1306/ssd1306.c **** //    color => Pixel color
 265:../SSD1306/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 921              	 .loc 3 265 0
 922              	 .cfi_startproc
 923              	 
 924              	 
 925              	 
 926 0000 80B4     	 push {r7}
 927              	.LCFI59:
 928              	 .cfi_def_cfa_offset 4
 929              	 .cfi_offset 7,-4
 930 0002 83B0     	 sub sp,sp,#12
 931              	.LCFI60:
 932              	 .cfi_def_cfa_offset 16
 933 0004 00AF     	 add r7,sp,#0
 934              	.LCFI61:
 935              	 .cfi_def_cfa_register 7
 936 0006 0346     	 mov r3,r0
 937 0008 FB71     	 strb r3,[r7,#7]
 938 000a 0B46     	 mov r3,r1
 939 000c BB71     	 strb r3,[r7,#6]
 940 000e 1346     	 mov r3,r2
 941 0010 7B71     	 strb r3,[r7,#5]
 266:../SSD1306/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 942              	 .loc 3 266 0
 943 0012 FB79     	 ldrb r3,[r7,#7]
 944 0014 812B     	 cmp r3,#129
 945 0016 02D8     	 bhi .L52
 946              	 .loc 3 266 0 is_stmt 0 discriminator 1
 947 0018 BB79     	 ldrb r3,[r7,#6]
 948 001a 1F2B     	 cmp r3,#31
 949 001c 00D9     	 bls .L53
 950              	.L52:
 267:../SSD1306/ssd1306.c ****         // Don't write outside the buffer
 268:../SSD1306/ssd1306.c ****         return;
 951              	 .loc 3 268 0 is_stmt 1
 952 001e 50E0     	 b .L51
 953              	.L53:
 269:../SSD1306/ssd1306.c ****     }
 270:../SSD1306/ssd1306.c ****     
 271:../SSD1306/ssd1306.c ****     // Check if pixel should be inverted
 272:../SSD1306/ssd1306.c ****     if(SSD1306.Inverted) {
 954              	 .loc 3 272 0
 955 0020 2A4B     	 ldr r3,.L57
 956 0022 1B79     	 ldrb r3,[r3,#4]
 957 0024 002B     	 cmp r3,#0
 958 0026 06D0     	 beq .L55
 273:../SSD1306/ssd1306.c ****         color = (SSD1306_COLOR)!color;
 959              	 .loc 3 273 0
 960 0028 7B79     	 ldrb r3,[r7,#5]
 961 002a 002B     	 cmp r3,#0
 962 002c 0CBF     	 ite eq
 963 002e 0123     	 moveq r3,#1
 964 0030 0023     	 movne r3,#0
 965 0032 DBB2     	 uxtb r3,r3
 966 0034 7B71     	 strb r3,[r7,#5]
 967              	.L55:
 274:../SSD1306/ssd1306.c ****     }
 275:../SSD1306/ssd1306.c ****     
 276:../SSD1306/ssd1306.c ****     // Draw in the right color
 277:../SSD1306/ssd1306.c ****     if(color == White) {
 968              	 .loc 3 277 0
 969 0036 7B79     	 ldrb r3,[r7,#5]
 970 0038 012B     	 cmp r3,#1
 971 003a 20D1     	 bne .L56
 278:../SSD1306/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 972              	 .loc 3 278 0
 973 003c FA79     	 ldrb r2,[r7,#7]
 974 003e BB79     	 ldrb r3,[r7,#6]
 975 0040 DB08     	 lsrs r3,r3,#3
 976 0042 D8B2     	 uxtb r0,r3
 977 0044 0146     	 mov r1,r0
 978 0046 0B46     	 mov r3,r1
 979 0048 9B01     	 lsls r3,r3,#6
 980 004a 0B44     	 add r3,r3,r1
 981 004c 5B00     	 lsls r3,r3,#1
 982 004e 1A44     	 add r2,r2,r3
 983 0050 F979     	 ldrb r1,[r7,#7]
 984 0052 0346     	 mov r3,r0
 985 0054 9B01     	 lsls r3,r3,#6
 986 0056 0344     	 add r3,r3,r0
 987 0058 5B00     	 lsls r3,r3,#1
 988 005a 0B44     	 add r3,r3,r1
 989 005c 1C49     	 ldr r1,.L57+4
 990 005e CB5C     	 ldrb r3,[r1,r3]
 991 0060 D8B2     	 uxtb r0,r3
 992 0062 BB79     	 ldrb r3,[r7,#6]
 993 0064 03F00703 	 and r3,r3,#7
 994 0068 0121     	 movs r1,#1
 995 006a 01FA03F3 	 lsl r3,r1,r3
 996 006e DBB2     	 uxtb r3,r3
 997 0070 0146     	 mov r1,r0
 998 0072 0B43     	 orrs r3,r3,r1
 999 0074 DBB2     	 uxtb r3,r3
 1000 0076 D9B2     	 uxtb r1,r3
 1001 0078 154B     	 ldr r3,.L57+4
 1002 007a 9954     	 strb r1,[r3,r2]
 1003 007c 21E0     	 b .L51
 1004              	.L56:
 279:../SSD1306/ssd1306.c ****     } else { 
 280:../SSD1306/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 1005              	 .loc 3 280 0
 1006 007e FA79     	 ldrb r2,[r7,#7]
 1007 0080 BB79     	 ldrb r3,[r7,#6]
 1008 0082 DB08     	 lsrs r3,r3,#3
 1009 0084 D8B2     	 uxtb r0,r3
 1010 0086 0146     	 mov r1,r0
 1011 0088 0B46     	 mov r3,r1
 1012 008a 9B01     	 lsls r3,r3,#6
 1013 008c 0B44     	 add r3,r3,r1
 1014 008e 5B00     	 lsls r3,r3,#1
 1015 0090 1A44     	 add r2,r2,r3
 1016 0092 F979     	 ldrb r1,[r7,#7]
 1017 0094 0346     	 mov r3,r0
 1018 0096 9B01     	 lsls r3,r3,#6
 1019 0098 0344     	 add r3,r3,r0
 1020 009a 5B00     	 lsls r3,r3,#1
 1021 009c 0B44     	 add r3,r3,r1
 1022 009e 0C49     	 ldr r1,.L57+4
 1023 00a0 CB5C     	 ldrb r3,[r1,r3]
 1024 00a2 D8B2     	 uxtb r0,r3
 1025 00a4 BB79     	 ldrb r3,[r7,#6]
 1026 00a6 03F00703 	 and r3,r3,#7
 1027 00aa 0121     	 movs r1,#1
 1028 00ac 01FA03F3 	 lsl r3,r1,r3
 1029 00b0 DBB2     	 uxtb r3,r3
 1030 00b2 DB43     	 mvns r3,r3
 1031 00b4 DBB2     	 uxtb r3,r3
 1032 00b6 0146     	 mov r1,r0
 1033 00b8 0B40     	 ands r3,r3,r1
 1034 00ba DBB2     	 uxtb r3,r3
 1035 00bc D9B2     	 uxtb r1,r3
 1036 00be 044B     	 ldr r3,.L57+4
 1037 00c0 9954     	 strb r1,[r3,r2]
 1038              	.L51:
 281:../SSD1306/ssd1306.c ****     }
 282:../SSD1306/ssd1306.c **** }
 1039              	 .loc 3 282 0
 1040 00c2 0C37     	 adds r7,r7,#12
 1041              	.LCFI62:
 1042              	 .cfi_def_cfa_offset 4
 1043 00c4 BD46     	 mov sp,r7
 1044              	.LCFI63:
 1045              	 .cfi_def_cfa_register 13
 1046              	 
 1047 00c6 5DF8047B 	 ldr r7,[sp],#4
 1048              	.LCFI64:
 1049              	 .cfi_restore 7
 1050              	 .cfi_def_cfa_offset 0
 1051 00ca 7047     	 bx lr
 1052              	.L58:
 1053              	 .align 2
 1054              	.L57:
 1055 00cc 00000000 	 .word SSD1306
 1056 00d0 00000000 	 .word SSD1306_Buffer
 1057              	 .cfi_endproc
 1058              	.LFE271:
 1060              	 .section .text.ssd1306_WriteChar,"ax",%progbits
 1061              	 .align 2
 1062              	 .global ssd1306_WriteChar
 1063              	 .thumb
 1064              	 .thumb_func
 1066              	ssd1306_WriteChar:
 1067              	.LFB272:
 283:../SSD1306/ssd1306.c **** 
 284:../SSD1306/ssd1306.c **** // Draw 1 char to the screen buffer
 285:../SSD1306/ssd1306.c **** // ch       => char om weg te schrijven
 286:../SSD1306/ssd1306.c **** // Font     => Font waarmee we gaan schrijven
 287:../SSD1306/ssd1306.c **** // color    => Black or White
 288:../SSD1306/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 1068              	 .loc 3 288 0
 1069              	 .cfi_startproc
 1070              	 
 1071              	 
 1072 0000 90B5     	 push {r4,r7,lr}
 1073              	.LCFI65:
 1074              	 .cfi_def_cfa_offset 12
 1075              	 .cfi_offset 4,-12
 1076              	 .cfi_offset 7,-8
 1077              	 .cfi_offset 14,-4
 1078 0002 89B0     	 sub sp,sp,#36
 1079              	.LCFI66:
 1080              	 .cfi_def_cfa_offset 48
 1081 0004 00AF     	 add r7,sp,#0
 1082              	.LCFI67:
 1083              	 .cfi_def_cfa_register 7
 1084 0006 0446     	 mov r4,r0
 1085 0008 381D     	 adds r0,r7,#4
 1086 000a 80E80600 	 stmia r0,{r1,r2}
 1087 000e 1A46     	 mov r2,r3
 1088 0010 2346     	 mov r3,r4
 1089 0012 FB73     	 strb r3,[r7,#15]
 1090 0014 1346     	 mov r3,r2
 1091 0016 BB73     	 strb r3,[r7,#14]
 289:../SSD1306/ssd1306.c ****     uint32_t i, b, j;
 290:../SSD1306/ssd1306.c ****     
 291:../SSD1306/ssd1306.c ****     // Check if character is valid
 292:../SSD1306/ssd1306.c ****     if (ch < 32 || ch > 126)
 1092              	 .loc 3 292 0
 1093 0018 FB7B     	 ldrb r3,[r7,#15]
 1094 001a 1F2B     	 cmp r3,#31
 1095 001c 02D9     	 bls .L60
 1096              	 .loc 3 292 0 is_stmt 0 discriminator 1
 1097 001e FB7B     	 ldrb r3,[r7,#15]
 1098 0020 7E2B     	 cmp r3,#126
 1099 0022 01D9     	 bls .L61
 1100              	.L60:
 293:../SSD1306/ssd1306.c ****         return 0;
 1101              	 .loc 3 293 0 is_stmt 1
 1102 0024 0023     	 movs r3,#0
 1103 0026 71E0     	 b .L62
 1104              	.L61:
 294:../SSD1306/ssd1306.c ****     
 295:../SSD1306/ssd1306.c ****     // Check remaining space on current line
 296:../SSD1306/ssd1306.c ****     if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 1105              	 .loc 3 296 0
 1106 0028 3A4B     	 ldr r3,.L71
 1107 002a 1B88     	 ldrh r3,[r3]
 1108 002c 1A46     	 mov r2,r3
 1109 002e 3B79     	 ldrb r3,[r7,#4]
 1110 0030 1344     	 add r3,r3,r2
 1111 0032 822B     	 cmp r3,#130
 1112 0034 06DC     	 bgt .L63
 297:../SSD1306/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 1113              	 .loc 3 297 0 discriminator 1
 1114 0036 374B     	 ldr r3,.L71
 1115 0038 5B88     	 ldrh r3,[r3,#2]
 1116 003a 1A46     	 mov r2,r3
 1117 003c 7B79     	 ldrb r3,[r7,#5]
 1118 003e 1344     	 add r3,r3,r2
 296:../SSD1306/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 1119              	 .loc 3 296 0 discriminator 1
 1120 0040 202B     	 cmp r3,#32
 1121 0042 01DD     	 ble .L64
 1122              	.L63:
 298:../SSD1306/ssd1306.c ****     {
 299:../SSD1306/ssd1306.c ****         // Not enough space on current line
 300:../SSD1306/ssd1306.c ****         return 0;
 1123              	 .loc 3 300 0
 1124 0044 0023     	 movs r3,#0
 1125 0046 61E0     	 b .L62
 1126              	.L64:
 301:../SSD1306/ssd1306.c ****     }
 302:../SSD1306/ssd1306.c ****     
 303:../SSD1306/ssd1306.c ****     // Use the font to write
 304:../SSD1306/ssd1306.c ****     for(i = 0; i < Font.FontHeight; i++) {
 1127              	 .loc 3 304 0
 1128 0048 0023     	 movs r3,#0
 1129 004a FB61     	 str r3,[r7,#28]
 1130 004c 50E0     	 b .L65
 1131              	.L70:
 305:../SSD1306/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 1132              	 .loc 3 305 0
 1133 004e BA68     	 ldr r2,[r7,#8]
 1134 0050 FB7B     	 ldrb r3,[r7,#15]
 1135 0052 203B     	 subs r3,r3,#32
 1136 0054 7979     	 ldrb r1,[r7,#5]
 1137 0056 01FB03F3 	 mul r3,r1,r3
 1138 005a 1946     	 mov r1,r3
 1139 005c FB69     	 ldr r3,[r7,#28]
 1140 005e 0B44     	 add r3,r3,r1
 1141 0060 5B00     	 lsls r3,r3,#1
 1142 0062 1344     	 add r3,r3,r2
 1143 0064 1B88     	 ldrh r3,[r3]
 1144 0066 7B61     	 str r3,[r7,#20]
 306:../SSD1306/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 1145              	 .loc 3 306 0
 1146 0068 0023     	 movs r3,#0
 1147 006a BB61     	 str r3,[r7,#24]
 1148 006c 38E0     	 b .L66
 1149              	.L69:
 307:../SSD1306/ssd1306.c ****             if((b << j) & 0x8000)  {
 1150              	 .loc 3 307 0
 1151 006e BB69     	 ldr r3,[r7,#24]
 1152 0070 7A69     	 ldr r2,[r7,#20]
 1153 0072 02FA03F3 	 lsl r3,r2,r3
 1154 0076 03F40043 	 and r3,r3,#32768
 1155 007a 002B     	 cmp r3,#0
 1156 007c 14D0     	 beq .L67
 308:../SSD1306/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 1157              	 .loc 3 308 0
 1158 007e 254B     	 ldr r3,.L71
 1159 0080 1B88     	 ldrh r3,[r3]
 1160 0082 DAB2     	 uxtb r2,r3
 1161 0084 BB69     	 ldr r3,[r7,#24]
 1162 0086 DBB2     	 uxtb r3,r3
 1163 0088 1344     	 add r3,r3,r2
 1164 008a D9B2     	 uxtb r1,r3
 1165 008c 214B     	 ldr r3,.L71
 1166 008e 5B88     	 ldrh r3,[r3,#2]
 1167 0090 DAB2     	 uxtb r2,r3
 1168 0092 FB69     	 ldr r3,[r7,#28]
 1169 0094 DBB2     	 uxtb r3,r3
 1170 0096 1344     	 add r3,r3,r2
 1171 0098 DAB2     	 uxtb r2,r3
 1172 009a BB7B     	 ldrb r3,[r7,#14]
 1173 009c 0846     	 mov r0,r1
 1174 009e 1146     	 mov r1,r2
 1175 00a0 1A46     	 mov r2,r3
 1176 00a2 FFF7FEFF 	 bl ssd1306_DrawPixel
 1177 00a6 18E0     	 b .L68
 1178              	.L67:
 309:../SSD1306/ssd1306.c ****             } else {
 310:../SSD1306/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!col
 1179              	 .loc 3 310 0
 1180 00a8 1A4B     	 ldr r3,.L71
 1181 00aa 1B88     	 ldrh r3,[r3]
 1182 00ac DAB2     	 uxtb r2,r3
 1183 00ae BB69     	 ldr r3,[r7,#24]
 1184 00b0 DBB2     	 uxtb r3,r3
 1185 00b2 1344     	 add r3,r3,r2
 1186 00b4 D9B2     	 uxtb r1,r3
 1187 00b6 174B     	 ldr r3,.L71
 1188 00b8 5B88     	 ldrh r3,[r3,#2]
 1189 00ba DAB2     	 uxtb r2,r3
 1190 00bc FB69     	 ldr r3,[r7,#28]
 1191 00be DBB2     	 uxtb r3,r3
 1192 00c0 1344     	 add r3,r3,r2
 1193 00c2 DAB2     	 uxtb r2,r3
 1194 00c4 BB7B     	 ldrb r3,[r7,#14]
 1195 00c6 002B     	 cmp r3,#0
 1196 00c8 0CBF     	 ite eq
 1197 00ca 0123     	 moveq r3,#1
 1198 00cc 0023     	 movne r3,#0
 1199 00ce DBB2     	 uxtb r3,r3
 1200 00d0 0846     	 mov r0,r1
 1201 00d2 1146     	 mov r1,r2
 1202 00d4 1A46     	 mov r2,r3
 1203 00d6 FFF7FEFF 	 bl ssd1306_DrawPixel
 1204              	.L68:
 306:../SSD1306/ssd1306.c ****             if((b << j) & 0x8000)  {
 1205              	 .loc 3 306 0 discriminator 2
 1206 00da BB69     	 ldr r3,[r7,#24]
 1207 00dc 0133     	 adds r3,r3,#1
 1208 00de BB61     	 str r3,[r7,#24]
 1209              	.L66:
 306:../SSD1306/ssd1306.c ****             if((b << j) & 0x8000)  {
 1210              	 .loc 3 306 0 is_stmt 0 discriminator 1
 1211 00e0 3B79     	 ldrb r3,[r7,#4]
 1212 00e2 1A46     	 mov r2,r3
 1213 00e4 BB69     	 ldr r3,[r7,#24]
 1214 00e6 9A42     	 cmp r2,r3
 1215 00e8 C1D8     	 bhi .L69
 304:../SSD1306/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 1216              	 .loc 3 304 0 is_stmt 1 discriminator 2
 1217 00ea FB69     	 ldr r3,[r7,#28]
 1218 00ec 0133     	 adds r3,r3,#1
 1219 00ee FB61     	 str r3,[r7,#28]
 1220              	.L65:
 304:../SSD1306/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 1221              	 .loc 3 304 0 is_stmt 0 discriminator 1
 1222 00f0 7B79     	 ldrb r3,[r7,#5]
 1223 00f2 1A46     	 mov r2,r3
 1224 00f4 FB69     	 ldr r3,[r7,#28]
 1225 00f6 9A42     	 cmp r2,r3
 1226 00f8 A9D8     	 bhi .L70
 311:../SSD1306/ssd1306.c ****             }
 312:../SSD1306/ssd1306.c ****         }
 313:../SSD1306/ssd1306.c ****     }
 314:../SSD1306/ssd1306.c ****     
 315:../SSD1306/ssd1306.c ****     // The current space is now taken
 316:../SSD1306/ssd1306.c ****     SSD1306.CurrentX += Font.FontWidth;
 1227              	 .loc 3 316 0 is_stmt 1
 1228 00fa 064B     	 ldr r3,.L71
 1229 00fc 1A88     	 ldrh r2,[r3]
 1230 00fe 3B79     	 ldrb r3,[r7,#4]
 1231 0100 9BB2     	 uxth r3,r3
 1232 0102 1344     	 add r3,r3,r2
 1233 0104 9AB2     	 uxth r2,r3
 1234 0106 034B     	 ldr r3,.L71
 1235 0108 1A80     	 strh r2,[r3]
 317:../SSD1306/ssd1306.c ****     
 318:../SSD1306/ssd1306.c ****     // Return written char for validation
 319:../SSD1306/ssd1306.c ****     return ch;
 1236              	 .loc 3 319 0
 1237 010a FB7B     	 ldrb r3,[r7,#15]
 1238              	.L62:
 320:../SSD1306/ssd1306.c **** }
 1239              	 .loc 3 320 0
 1240 010c 1846     	 mov r0,r3
 1241 010e 2437     	 adds r7,r7,#36
 1242              	.LCFI68:
 1243              	 .cfi_def_cfa_offset 12
 1244 0110 BD46     	 mov sp,r7
 1245              	.LCFI69:
 1246              	 .cfi_def_cfa_register 13
 1247              	 
 1248 0112 90BD     	 pop {r4,r7,pc}
 1249              	.L72:
 1250              	 .align 2
 1251              	.L71:
 1252 0114 00000000 	 .word SSD1306
 1253              	 .cfi_endproc
 1254              	.LFE272:
 1256              	 .section .text.ssd1306_WriteString,"ax",%progbits
 1257              	 .align 2
 1258              	 .global ssd1306_WriteString
 1259              	 .thumb
 1260              	 .thumb_func
 1262              	ssd1306_WriteString:
 1263              	.LFB273:
 321:../SSD1306/ssd1306.c **** 
 322:../SSD1306/ssd1306.c **** // Write full string to screenbuffer
 323:../SSD1306/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 1264              	 .loc 3 323 0
 1265              	 .cfi_startproc
 1266              	 
 1267              	 
 1268 0000 90B5     	 push {r4,r7,lr}
 1269              	.LCFI70:
 1270              	 .cfi_def_cfa_offset 12
 1271              	 .cfi_offset 4,-12
 1272              	 .cfi_offset 7,-8
 1273              	 .cfi_offset 14,-4
 1274 0002 85B0     	 sub sp,sp,#20
 1275              	.LCFI71:
 1276              	 .cfi_def_cfa_offset 32
 1277 0004 00AF     	 add r7,sp,#0
 1278              	.LCFI72:
 1279              	 .cfi_def_cfa_register 7
 1280 0006 F860     	 str r0,[r7,#12]
 1281 0008 381D     	 adds r0,r7,#4
 1282 000a 80E80600 	 stmia r0,{r1,r2}
 1283 000e FB70     	 strb r3,[r7,#3]
 324:../SSD1306/ssd1306.c ****     // Write until null-byte
 325:../SSD1306/ssd1306.c ****     while (*str) {
 1284              	 .loc 3 325 0
 1285 0010 15E0     	 b .L74
 1286              	.L77:
 326:../SSD1306/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 1287              	 .loc 3 326 0
 1288 0012 FB68     	 ldr r3,[r7,#12]
 1289 0014 1B78     	 ldrb r3,[r3]
 1290 0016 FC78     	 ldrb r4,[r7,#3]
 1291 0018 1846     	 mov r0,r3
 1292 001a 3B1D     	 adds r3,r7,#4
 1293 001c 93E80600 	 ldmia r3,{r1,r2}
 1294 0020 2346     	 mov r3,r4
 1295 0022 FFF7FEFF 	 bl ssd1306_WriteChar
 1296 0026 0346     	 mov r3,r0
 1297 0028 1A46     	 mov r2,r3
 1298 002a FB68     	 ldr r3,[r7,#12]
 1299 002c 1B78     	 ldrb r3,[r3]
 1300 002e 9A42     	 cmp r2,r3
 1301 0030 02D0     	 beq .L75
 327:../SSD1306/ssd1306.c ****             // Char could not be written
 328:../SSD1306/ssd1306.c ****             return *str;
 1302              	 .loc 3 328 0
 1303 0032 FB68     	 ldr r3,[r7,#12]
 1304 0034 1B78     	 ldrb r3,[r3]
 1305 0036 08E0     	 b .L76
 1306              	.L75:
 329:../SSD1306/ssd1306.c ****         }
 330:../SSD1306/ssd1306.c ****         
 331:../SSD1306/ssd1306.c ****         // Next char
 332:../SSD1306/ssd1306.c ****         str++;
 1307              	 .loc 3 332 0
 1308 0038 FB68     	 ldr r3,[r7,#12]
 1309 003a 0133     	 adds r3,r3,#1
 1310 003c FB60     	 str r3,[r7,#12]
 1311              	.L74:
 325:../SSD1306/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 1312              	 .loc 3 325 0
 1313 003e FB68     	 ldr r3,[r7,#12]
 1314 0040 1B78     	 ldrb r3,[r3]
 1315 0042 002B     	 cmp r3,#0
 1316 0044 E5D1     	 bne .L77
 333:../SSD1306/ssd1306.c ****     }
 334:../SSD1306/ssd1306.c ****     
 335:../SSD1306/ssd1306.c ****     // Everything ok
 336:../SSD1306/ssd1306.c ****     return *str;
 1317              	 .loc 3 336 0
 1318 0046 FB68     	 ldr r3,[r7,#12]
 1319 0048 1B78     	 ldrb r3,[r3]
 1320              	.L76:
 337:../SSD1306/ssd1306.c **** }
 1321              	 .loc 3 337 0
 1322 004a 1846     	 mov r0,r3
 1323 004c 1437     	 adds r7,r7,#20
 1324              	.LCFI73:
 1325              	 .cfi_def_cfa_offset 12
 1326 004e BD46     	 mov sp,r7
 1327              	.LCFI74:
 1328              	 .cfi_def_cfa_register 13
 1329              	 
 1330 0050 90BD     	 pop {r4,r7,pc}
 1331              	 .cfi_endproc
 1332              	.LFE273:
 1334 0052 00BF     	 .section .text.ssd1306_SetCursor,"ax",%progbits
 1335              	 .align 2
 1336              	 .global ssd1306_SetCursor
 1337              	 .thumb
 1338              	 .thumb_func
 1340              	ssd1306_SetCursor:
 1341              	.LFB274:
 338:../SSD1306/ssd1306.c **** 
 339:../SSD1306/ssd1306.c **** // Position the cursor
 340:../SSD1306/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 1342              	 .loc 3 340 0
 1343              	 .cfi_startproc
 1344              	 
 1345              	 
 1346              	 
 1347 0000 80B4     	 push {r7}
 1348              	.LCFI75:
 1349              	 .cfi_def_cfa_offset 4
 1350              	 .cfi_offset 7,-4
 1351 0002 83B0     	 sub sp,sp,#12
 1352              	.LCFI76:
 1353              	 .cfi_def_cfa_offset 16
 1354 0004 00AF     	 add r7,sp,#0
 1355              	.LCFI77:
 1356              	 .cfi_def_cfa_register 7
 1357 0006 0346     	 mov r3,r0
 1358 0008 0A46     	 mov r2,r1
 1359 000a FB71     	 strb r3,[r7,#7]
 1360 000c 1346     	 mov r3,r2
 1361 000e BB71     	 strb r3,[r7,#6]
 341:../SSD1306/ssd1306.c ****     SSD1306.CurrentX = x;
 1362              	 .loc 3 341 0
 1363 0010 FB79     	 ldrb r3,[r7,#7]
 1364 0012 9AB2     	 uxth r2,r3
 1365 0014 054B     	 ldr r3,.L79
 1366 0016 1A80     	 strh r2,[r3]
 342:../SSD1306/ssd1306.c ****     SSD1306.CurrentY = y;
 1367              	 .loc 3 342 0
 1368 0018 BB79     	 ldrb r3,[r7,#6]
 1369 001a 9AB2     	 uxth r2,r3
 1370 001c 034B     	 ldr r3,.L79
 1371 001e 5A80     	 strh r2,[r3,#2]
 343:../SSD1306/ssd1306.c **** }
 1372              	 .loc 3 343 0
 1373 0020 0C37     	 adds r7,r7,#12
 1374              	.LCFI78:
 1375              	 .cfi_def_cfa_offset 4
 1376 0022 BD46     	 mov sp,r7
 1377              	.LCFI79:
 1378              	 .cfi_def_cfa_register 13
 1379              	 
 1380 0024 5DF8047B 	 ldr r7,[sp],#4
 1381              	.LCFI80:
 1382              	 .cfi_restore 7
 1383              	 .cfi_def_cfa_offset 0
 1384 0028 7047     	 bx lr
 1385              	.L80:
 1386 002a 00BF     	 .align 2
 1387              	.L79:
 1388 002c 00000000 	 .word SSD1306
 1389              	 .cfi_endproc
 1390              	.LFE274:
 1392              	 .section .text.ssd1306_Line,"ax",%progbits
 1393              	 .align 2
 1394              	 .global ssd1306_Line
 1395              	 .thumb
 1396              	 .thumb_func
 1398              	ssd1306_Line:
 1399              	.LFB275:
 344:../SSD1306/ssd1306.c **** 
 345:../SSD1306/ssd1306.c **** // Draw line by Bresenhem's algorithm
 346:../SSD1306/ssd1306.c **** void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 1400              	 .loc 3 346 0
 1401              	 .cfi_startproc
 1402              	 
 1403              	 
 1404 0000 90B5     	 push {r4,r7,lr}
 1405              	.LCFI81:
 1406              	 .cfi_def_cfa_offset 12
 1407              	 .cfi_offset 4,-12
 1408              	 .cfi_offset 7,-8
 1409              	 .cfi_offset 14,-4
 1410 0002 89B0     	 sub sp,sp,#36
 1411              	.LCFI82:
 1412              	 .cfi_def_cfa_offset 48
 1413 0004 00AF     	 add r7,sp,#0
 1414              	.LCFI83:
 1415              	 .cfi_def_cfa_register 7
 1416 0006 0446     	 mov r4,r0
 1417 0008 0846     	 mov r0,r1
 1418 000a 1146     	 mov r1,r2
 1419 000c 1A46     	 mov r2,r3
 1420 000e 2346     	 mov r3,r4
 1421 0010 FB71     	 strb r3,[r7,#7]
 1422 0012 0346     	 mov r3,r0
 1423 0014 BB71     	 strb r3,[r7,#6]
 1424 0016 0B46     	 mov r3,r1
 1425 0018 7B71     	 strb r3,[r7,#5]
 1426 001a 1346     	 mov r3,r2
 1427 001c 3B71     	 strb r3,[r7,#4]
 347:../SSD1306/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 1428              	 .loc 3 347 0
 1429 001e 7A79     	 ldrb r2,[r7,#5]
 1430 0020 FB79     	 ldrb r3,[r7,#7]
 1431 0022 D31A     	 subs r3,r2,r3
 1432 0024 002B     	 cmp r3,#0
 1433 0026 B8BF     	 it lt
 1434 0028 5B42     	 rsblt r3,r3,#0
 1435 002a BB61     	 str r3,[r7,#24]
 348:../SSD1306/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 1436              	 .loc 3 348 0
 1437 002c 3A79     	 ldrb r2,[r7,#4]
 1438 002e BB79     	 ldrb r3,[r7,#6]
 1439 0030 D31A     	 subs r3,r2,r3
 1440 0032 002B     	 cmp r3,#0
 1441 0034 B8BF     	 it lt
 1442 0036 5B42     	 rsblt r3,r3,#0
 1443 0038 7B61     	 str r3,[r7,#20]
 349:../SSD1306/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 1444              	 .loc 3 349 0
 1445 003a FA79     	 ldrb r2,[r7,#7]
 1446 003c 7B79     	 ldrb r3,[r7,#5]
 1447 003e 9A42     	 cmp r2,r3
 1448 0040 01D2     	 bcs .L82
 1449              	 .loc 3 349 0 is_stmt 0 discriminator 1
 1450 0042 0123     	 movs r3,#1
 1451 0044 01E0     	 b .L83
 1452              	.L82:
 1453              	 .loc 3 349 0 discriminator 2
 1454 0046 4FF0FF33 	 mov r3,#-1
 1455              	.L83:
 1456              	 .loc 3 349 0 discriminator 4
 1457 004a 3B61     	 str r3,[r7,#16]
 350:../SSD1306/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 1458              	 .loc 3 350 0 is_stmt 1 discriminator 4
 1459 004c BA79     	 ldrb r2,[r7,#6]
 1460 004e 3B79     	 ldrb r3,[r7,#4]
 1461 0050 9A42     	 cmp r2,r3
 1462 0052 01D2     	 bcs .L84
 1463              	 .loc 3 350 0 is_stmt 0 discriminator 1
 1464 0054 0123     	 movs r3,#1
 1465 0056 01E0     	 b .L85
 1466              	.L84:
 1467              	 .loc 3 350 0 discriminator 2
 1468 0058 4FF0FF33 	 mov r3,#-1
 1469              	.L85:
 1470              	 .loc 3 350 0 discriminator 4
 1471 005c FB60     	 str r3,[r7,#12]
 351:../SSD1306/ssd1306.c ****   int32_t error = deltaX - deltaY;
 1472              	 .loc 3 351 0 is_stmt 1 discriminator 4
 1473 005e BA69     	 ldr r2,[r7,#24]
 1474 0060 7B69     	 ldr r3,[r7,#20]
 1475 0062 D31A     	 subs r3,r2,r3
 1476 0064 FB61     	 str r3,[r7,#28]
 352:../SSD1306/ssd1306.c ****   int32_t error2;
 353:../SSD1306/ssd1306.c ****     
 354:../SSD1306/ssd1306.c ****   ssd1306_DrawPixel(x2, y2, color);
 1477              	 .loc 3 354 0 discriminator 4
 1478 0066 7979     	 ldrb r1,[r7,#5]
 1479 0068 3A79     	 ldrb r2,[r7,#4]
 1480 006a 97F83030 	 ldrb r3,[r7,#48]
 1481 006e 0846     	 mov r0,r1
 1482 0070 1146     	 mov r1,r2
 1483 0072 1A46     	 mov r2,r3
 1484 0074 FFF7FEFF 	 bl ssd1306_DrawPixel
 355:../SSD1306/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 1485              	 .loc 3 355 0 discriminator 4
 1486 0078 26E0     	 b .L86
 1487              	.L88:
 356:../SSD1306/ssd1306.c ****     {
 357:../SSD1306/ssd1306.c ****     ssd1306_DrawPixel(x1, y1, color);
 1488              	 .loc 3 357 0
 1489 007a F979     	 ldrb r1,[r7,#7]
 1490 007c BA79     	 ldrb r2,[r7,#6]
 1491 007e 97F83030 	 ldrb r3,[r7,#48]
 1492 0082 0846     	 mov r0,r1
 1493 0084 1146     	 mov r1,r2
 1494 0086 1A46     	 mov r2,r3
 1495 0088 FFF7FEFF 	 bl ssd1306_DrawPixel
 358:../SSD1306/ssd1306.c ****     error2 = error * 2;
 1496              	 .loc 3 358 0
 1497 008c FB69     	 ldr r3,[r7,#28]
 1498 008e 5B00     	 lsls r3,r3,#1
 1499 0090 BB60     	 str r3,[r7,#8]
 359:../SSD1306/ssd1306.c ****     if(error2 > -deltaY)
 1500              	 .loc 3 359 0
 1501 0092 7B69     	 ldr r3,[r7,#20]
 1502 0094 5A42     	 negs r2,r3
 1503 0096 BB68     	 ldr r3,[r7,#8]
 1504 0098 9A42     	 cmp r2,r3
 1505 009a 08DA     	 bge .L87
 360:../SSD1306/ssd1306.c ****     {
 361:../SSD1306/ssd1306.c ****       error -= deltaY;
 1506              	 .loc 3 361 0
 1507 009c FA69     	 ldr r2,[r7,#28]
 1508 009e 7B69     	 ldr r3,[r7,#20]
 1509 00a0 D31A     	 subs r3,r2,r3
 1510 00a2 FB61     	 str r3,[r7,#28]
 362:../SSD1306/ssd1306.c ****       x1 += signX;
 1511              	 .loc 3 362 0
 1512 00a4 3B69     	 ldr r3,[r7,#16]
 1513 00a6 DAB2     	 uxtb r2,r3
 1514 00a8 FB79     	 ldrb r3,[r7,#7]
 1515 00aa 1344     	 add r3,r3,r2
 1516 00ac FB71     	 strb r3,[r7,#7]
 1517              	.L87:
 363:../SSD1306/ssd1306.c ****     }
 364:../SSD1306/ssd1306.c ****     else
 365:../SSD1306/ssd1306.c ****     {
 366:../SSD1306/ssd1306.c ****     /*nothing to do*/
 367:../SSD1306/ssd1306.c ****     }
 368:../SSD1306/ssd1306.c ****         
 369:../SSD1306/ssd1306.c ****     if(error2 < deltaX)
 1518              	 .loc 3 369 0
 1519 00ae BA68     	 ldr r2,[r7,#8]
 1520 00b0 BB69     	 ldr r3,[r7,#24]
 1521 00b2 9A42     	 cmp r2,r3
 1522 00b4 08DA     	 bge .L86
 370:../SSD1306/ssd1306.c ****     {
 371:../SSD1306/ssd1306.c ****       error += deltaX;
 1523              	 .loc 3 371 0
 1524 00b6 FA69     	 ldr r2,[r7,#28]
 1525 00b8 BB69     	 ldr r3,[r7,#24]
 1526 00ba 1344     	 add r3,r3,r2
 1527 00bc FB61     	 str r3,[r7,#28]
 372:../SSD1306/ssd1306.c ****       y1 += signY;
 1528              	 .loc 3 372 0
 1529 00be FB68     	 ldr r3,[r7,#12]
 1530 00c0 DAB2     	 uxtb r2,r3
 1531 00c2 BB79     	 ldrb r3,[r7,#6]
 1532 00c4 1344     	 add r3,r3,r2
 1533 00c6 BB71     	 strb r3,[r7,#6]
 1534              	.L86:
 355:../SSD1306/ssd1306.c ****     {
 1535              	 .loc 3 355 0
 1536 00c8 FA79     	 ldrb r2,[r7,#7]
 1537 00ca 7B79     	 ldrb r3,[r7,#5]
 1538 00cc 9A42     	 cmp r2,r3
 1539 00ce D4D1     	 bne .L88
 355:../SSD1306/ssd1306.c ****     {
 1540              	 .loc 3 355 0 is_stmt 0 discriminator 1
 1541 00d0 BA79     	 ldrb r2,[r7,#6]
 1542 00d2 3B79     	 ldrb r3,[r7,#4]
 1543 00d4 9A42     	 cmp r2,r3
 1544 00d6 D0D1     	 bne .L88
 373:../SSD1306/ssd1306.c ****     }
 374:../SSD1306/ssd1306.c ****     else
 375:../SSD1306/ssd1306.c ****     {
 376:../SSD1306/ssd1306.c ****     /*nothing to do*/
 377:../SSD1306/ssd1306.c ****     }
 378:../SSD1306/ssd1306.c ****   }
 379:../SSD1306/ssd1306.c ****   return;
 1545              	 .loc 3 379 0 is_stmt 1
 1546 00d8 00BF     	 nop
 380:../SSD1306/ssd1306.c **** }
 1547              	 .loc 3 380 0
 1548 00da 2437     	 adds r7,r7,#36
 1549              	.LCFI84:
 1550              	 .cfi_def_cfa_offset 12
 1551 00dc BD46     	 mov sp,r7
 1552              	.LCFI85:
 1553              	 .cfi_def_cfa_register 13
 1554              	 
 1555 00de 90BD     	 pop {r4,r7,pc}
 1556              	 .cfi_endproc
 1557              	.LFE275:
 1559              	 .section .text.ssd1306_Polyline,"ax",%progbits
 1560              	 .align 2
 1561              	 .global ssd1306_Polyline
 1562              	 .thumb
 1563              	 .thumb_func
 1565              	ssd1306_Polyline:
 1566              	.LFB276:
 381:../SSD1306/ssd1306.c **** //Draw polyline
 382:../SSD1306/ssd1306.c **** void ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color) {
 1567              	 .loc 3 382 0
 1568              	 .cfi_startproc
 1569              	 
 1570              	 
 1571 0000 B0B5     	 push {r4,r5,r7,lr}
 1572              	.LCFI86:
 1573              	 .cfi_def_cfa_offset 16
 1574              	 .cfi_offset 4,-16
 1575              	 .cfi_offset 5,-12
 1576              	 .cfi_offset 7,-8
 1577              	 .cfi_offset 14,-4
 1578 0002 86B0     	 sub sp,sp,#24
 1579              	.LCFI87:
 1580              	 .cfi_def_cfa_offset 40
 1581 0004 02AF     	 add r7,sp,#8
 1582              	.LCFI88:
 1583              	 .cfi_def_cfa 7,32
 1584 0006 7860     	 str r0,[r7,#4]
 1585 0008 0B46     	 mov r3,r1
 1586 000a 7B80     	 strh r3,[r7,#2]
 1587 000c 1346     	 mov r3,r2
 1588 000e 7B70     	 strb r3,[r7,#1]
 383:../SSD1306/ssd1306.c ****   uint16_t i;
 384:../SSD1306/ssd1306.c ****   if(par_vertex != 0){
 1589              	 .loc 3 384 0
 1590 0010 7B68     	 ldr r3,[r7,#4]
 1591 0012 002B     	 cmp r3,#0
 1592 0014 29D0     	 beq .L91
 385:../SSD1306/ssd1306.c ****     for(i = 1; i < par_size; i++){
 1593              	 .loc 3 385 0
 1594 0016 0123     	 movs r3,#1
 1595 0018 FB81     	 strh r3,[r7,#14]
 1596 001a 22E0     	 b .L92
 1597              	.L93:
 386:../SSD1306/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1598              	 .loc 3 386 0 discriminator 3
 1599 001c FB89     	 ldrh r3,[r7,#14]
 1600 001e 03F10043 	 add r3,r3,#-2147483648
 1601 0022 013B     	 subs r3,r3,#1
 1602 0024 5B00     	 lsls r3,r3,#1
 1603 0026 7A68     	 ldr r2,[r7,#4]
 1604 0028 1344     	 add r3,r3,r2
 1605 002a 1878     	 ldrb r0,[r3]
 1606 002c FB89     	 ldrh r3,[r7,#14]
 1607 002e 03F10043 	 add r3,r3,#-2147483648
 1608 0032 013B     	 subs r3,r3,#1
 1609 0034 5B00     	 lsls r3,r3,#1
 1610 0036 7A68     	 ldr r2,[r7,#4]
 1611 0038 1344     	 add r3,r3,r2
 1612 003a 5978     	 ldrb r1,[r3,#1]
 1613 003c FB89     	 ldrh r3,[r7,#14]
 1614 003e 5B00     	 lsls r3,r3,#1
 1615 0040 7A68     	 ldr r2,[r7,#4]
 1616 0042 1344     	 add r3,r3,r2
 1617 0044 1D78     	 ldrb r5,[r3]
 1618 0046 FB89     	 ldrh r3,[r7,#14]
 1619 0048 5B00     	 lsls r3,r3,#1
 1620 004a 7A68     	 ldr r2,[r7,#4]
 1621 004c 1344     	 add r3,r3,r2
 1622 004e 5C78     	 ldrb r4,[r3,#1]
 1623 0050 7B78     	 ldrb r3,[r7,#1]
 1624 0052 0093     	 str r3,[sp]
 1625 0054 2A46     	 mov r2,r5
 1626 0056 2346     	 mov r3,r4
 1627 0058 FFF7FEFF 	 bl ssd1306_Line
 385:../SSD1306/ssd1306.c ****     for(i = 1; i < par_size; i++){
 1628              	 .loc 3 385 0 discriminator 3
 1629 005c FB89     	 ldrh r3,[r7,#14]
 1630 005e 0133     	 adds r3,r3,#1
 1631 0060 FB81     	 strh r3,[r7,#14]
 1632              	.L92:
 385:../SSD1306/ssd1306.c ****     for(i = 1; i < par_size; i++){
 1633              	 .loc 3 385 0 is_stmt 0 discriminator 1
 1634 0062 FA89     	 ldrh r2,[r7,#14]
 1635 0064 7B88     	 ldrh r3,[r7,#2]
 1636 0066 9A42     	 cmp r2,r3
 1637 0068 D8D3     	 bcc .L93
 1638              	.L91:
 387:../SSD1306/ssd1306.c ****     }
 388:../SSD1306/ssd1306.c ****   }
 389:../SSD1306/ssd1306.c ****   else
 390:../SSD1306/ssd1306.c ****   {
 391:../SSD1306/ssd1306.c ****     /*nothing to do*/
 392:../SSD1306/ssd1306.c ****   }
 393:../SSD1306/ssd1306.c ****   return;
 1639              	 .loc 3 393 0 is_stmt 1 discriminator 1
 1640 006a 00BF     	 nop
 394:../SSD1306/ssd1306.c **** }
 1641              	 .loc 3 394 0 discriminator 1
 1642 006c 1037     	 adds r7,r7,#16
 1643              	.LCFI89:
 1644              	 .cfi_def_cfa_offset 16
 1645 006e BD46     	 mov sp,r7
 1646              	.LCFI90:
 1647              	 .cfi_def_cfa_register 13
 1648              	 
 1649 0070 B0BD     	 pop {r4,r5,r7,pc}
 1650              	 .cfi_endproc
 1651              	.LFE276:
 1653              	 .global __aeabi_f2d
 1654              	 .global __aeabi_dmul
 1655              	 .global __aeabi_ddiv
 1656              	 .global __aeabi_d2f
 1657 0072 00BF     	 .section .text.ssd1306_DegToRad,"ax",%progbits
 1658              	 .align 2
 1659              	 .thumb
 1660              	 .thumb_func
 1662              	ssd1306_DegToRad:
 1663              	.LFB277:
 395:../SSD1306/ssd1306.c **** /*Convert Degrees to Radians*/
 396:../SSD1306/ssd1306.c **** static float ssd1306_DegToRad(float par_deg) {
 1664              	 .loc 3 396 0
 1665              	 .cfi_startproc
 1666              	 
 1667              	 
 1668 0000 80B5     	 push {r7,lr}
 1669              	.LCFI91:
 1670              	 .cfi_def_cfa_offset 8
 1671              	 .cfi_offset 7,-8
 1672              	 .cfi_offset 14,-4
 1673 0002 82B0     	 sub sp,sp,#8
 1674              	.LCFI92:
 1675              	 .cfi_def_cfa_offset 16
 1676 0004 00AF     	 add r7,sp,#0
 1677              	.LCFI93:
 1678              	 .cfi_def_cfa_register 7
 1679 0006 7860     	 str r0,[r7,#4]
 397:../SSD1306/ssd1306.c ****     return par_deg * 3.14 / 180.0;
 1680              	 .loc 3 397 0
 1681 0008 7868     	 ldr r0,[r7,#4]
 1682 000a FFF7FEFF 	 bl __aeabi_f2d
 1683 000e 0246     	 mov r2,r0
 1684 0010 0B46     	 mov r3,r1
 1685 0012 1046     	 mov r0,r2
 1686 0014 1946     	 mov r1,r3
 1687 0016 0DA3     	 adr r3,.L97+4
 1688 0018 D3E90023 	 ldrd r2,[r3]
 1689 001c FFF7FEFF 	 bl __aeabi_dmul
 1690 0020 0246     	 mov r2,r0
 1691 0022 0B46     	 mov r3,r1
 1692 0024 1046     	 mov r0,r2
 1693 0026 1946     	 mov r1,r3
 1694 0028 4FF00002 	 mov r2,#0
 1695 002c 064B     	 ldr r3,.L97
 1696 002e FFF7FEFF 	 bl __aeabi_ddiv
 1697 0032 0246     	 mov r2,r0
 1698 0034 0B46     	 mov r3,r1
 1699 0036 1046     	 mov r0,r2
 1700 0038 1946     	 mov r1,r3
 1701 003a FFF7FEFF 	 bl __aeabi_d2f
 1702 003e 0346     	 mov r3,r0
 398:../SSD1306/ssd1306.c **** }
 1703              	 .loc 3 398 0
 1704 0040 1846     	 mov r0,r3
 1705 0042 0837     	 adds r7,r7,#8
 1706              	.LCFI94:
 1707              	 .cfi_def_cfa_offset 8
 1708 0044 BD46     	 mov sp,r7
 1709              	.LCFI95:
 1710              	 .cfi_def_cfa_register 13
 1711              	 
 1712 0046 80BD     	 pop {r7,pc}
 1713              	.L98:
 1714              	 .align 3
 1715              	.L97:
 1716 0048 00806640 	 .word 1080459264
 1717 004c 1F85EB51 	 .word 1374389535
 1718 0050 B81E0940 	 .word 1074339512
 1719              	 .cfi_endproc
 1720              	.LFE277:
 1722 0054 AFF30080 	 .section .text.ssd1306_NormalizeTo0_360,"ax",%progbits
 1723              	 .align 2
 1724              	 .thumb
 1725              	 .thumb_func
 1727              	ssd1306_NormalizeTo0_360:
 1728              	.LFB278:
 399:../SSD1306/ssd1306.c **** /*Normalize degree to [0;360]*/
 400:../SSD1306/ssd1306.c **** static uint16_t ssd1306_NormalizeTo0_360(uint16_t par_deg) {
 1729              	 .loc 3 400 0
 1730              	 .cfi_startproc
 1731              	 
 1732              	 
 1733              	 
 1734 0000 80B4     	 push {r7}
 1735              	.LCFI96:
 1736              	 .cfi_def_cfa_offset 4
 1737              	 .cfi_offset 7,-4
 1738 0002 85B0     	 sub sp,sp,#20
 1739              	.LCFI97:
 1740              	 .cfi_def_cfa_offset 24
 1741 0004 00AF     	 add r7,sp,#0
 1742              	.LCFI98:
 1743              	 .cfi_def_cfa_register 7
 1744 0006 0346     	 mov r3,r0
 1745 0008 FB80     	 strh r3,[r7,#6]
 401:../SSD1306/ssd1306.c ****   uint16_t loc_angle;
 402:../SSD1306/ssd1306.c ****   if(par_deg <= 360)
 1746              	 .loc 3 402 0
 1747 000a FB88     	 ldrh r3,[r7,#6]
 1748 000c B3F5B47F 	 cmp r3,#360
 1749 0010 02D8     	 bhi .L100
 403:../SSD1306/ssd1306.c ****   {
 404:../SSD1306/ssd1306.c ****     loc_angle = par_deg;
 1750              	 .loc 3 404 0
 1751 0012 FB88     	 ldrh r3,[r7,#6]
 1752 0014 FB81     	 strh r3,[r7,#14]
 1753 0016 13E0     	 b .L101
 1754              	.L100:
 405:../SSD1306/ssd1306.c ****   }
 406:../SSD1306/ssd1306.c ****   else
 407:../SSD1306/ssd1306.c ****   {
 408:../SSD1306/ssd1306.c ****     loc_angle = par_deg % 360;
 1755              	 .loc 3 408 0
 1756 0018 FB88     	 ldrh r3,[r7,#6]
 1757 001a DA08     	 lsrs r2,r3,#3
 1758 001c 0C49     	 ldr r1,.L105
 1759 001e A1FB0212 	 umull r1,r2,r1,r2
 1760 0022 9208     	 lsrs r2,r2,#2
 1761 0024 4FF4B471 	 mov r1,#360
 1762 0028 01FB02F2 	 mul r2,r1,r2
 1763 002c 9B1A     	 subs r3,r3,r2
 1764 002e FB81     	 strh r3,[r7,#14]
 409:../SSD1306/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
 1765              	 .loc 3 409 0
 1766 0030 FB88     	 ldrh r3,[r7,#6]
 1767 0032 002B     	 cmp r3,#0
 1768 0034 01D0     	 beq .L102
 1769              	 .loc 3 409 0 is_stmt 0 discriminator 1
 1770 0036 FB88     	 ldrh r3,[r7,#6]
 1771 0038 01E0     	 b .L103
 1772              	.L102:
 1773              	 .loc 3 409 0 discriminator 2
 1774 003a 4FF4B473 	 mov r3,#360
 1775              	.L103:
 1776              	 .loc 3 409 0 discriminator 4
 1777 003e FB81     	 strh r3,[r7,#14]
 1778              	.L101:
 410:../SSD1306/ssd1306.c ****   }
 411:../SSD1306/ssd1306.c ****   return loc_angle;
 1779              	 .loc 3 411 0 is_stmt 1
 1780 0040 FB89     	 ldrh r3,[r7,#14]
 412:../SSD1306/ssd1306.c **** }
 1781              	 .loc 3 412 0
 1782 0042 1846     	 mov r0,r3
 1783 0044 1437     	 adds r7,r7,#20
 1784              	.LCFI99:
 1785              	 .cfi_def_cfa_offset 4
 1786 0046 BD46     	 mov sp,r7
 1787              	.LCFI100:
 1788              	 .cfi_def_cfa_register 13
 1789              	 
 1790 0048 5DF8047B 	 ldr r7,[sp],#4
 1791              	.LCFI101:
 1792              	 .cfi_restore 7
 1793              	 .cfi_def_cfa_offset 0
 1794 004c 7047     	 bx lr
 1795              	.L106:
 1796 004e 00BF     	 .align 2
 1797              	.L105:
 1798 0050 176CC116 	 .word 381774871
 1799              	 .cfi_endproc
 1800              	.LFE278:
 1802              	 .global __aeabi_i2d
 1803              	 .global __aeabi_d2iz
 1804              	 .section .text.ssd1306_DrawArc,"ax",%progbits
 1805              	 .align 2
 1806              	 .global ssd1306_DrawArc
 1807              	 .thumb
 1808              	 .thumb_func
 1810              	ssd1306_DrawArc:
 1811              	.LFB279:
 413:../SSD1306/ssd1306.c **** /*DrawArc. Draw angle is beginning from 4 quart of trigonometric circle (3pi/2)
 414:../SSD1306/ssd1306.c ****  * start_angle in degree
 415:../SSD1306/ssd1306.c ****  * sweep in degree
 416:../SSD1306/ssd1306.c ****  */
 417:../SSD1306/ssd1306.c **** void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SS
 1812              	 .loc 3 417 0
 1813              	 .cfi_startproc
 1814              	 
 1815              	 
 1816 0000 B0B5     	 push {r4,r5,r7,lr}
 1817              	.LCFI102:
 1818              	 .cfi_def_cfa_offset 16
 1819              	 .cfi_offset 4,-16
 1820              	 .cfi_offset 5,-12
 1821              	 .cfi_offset 7,-8
 1822              	 .cfi_offset 14,-4
 1823 0002 8AB0     	 sub sp,sp,#40
 1824              	.LCFI103:
 1825              	 .cfi_def_cfa_offset 56
 1826 0004 02AF     	 add r7,sp,#8
 1827              	.LCFI104:
 1828              	 .cfi_def_cfa 7,48
 1829 0006 0446     	 mov r4,r0
 1830 0008 0846     	 mov r0,r1
 1831 000a 1146     	 mov r1,r2
 1832 000c 1A46     	 mov r2,r3
 1833 000e 2346     	 mov r3,r4
 1834 0010 FB71     	 strb r3,[r7,#7]
 1835 0012 0346     	 mov r3,r0
 1836 0014 BB71     	 strb r3,[r7,#6]
 1837 0016 0B46     	 mov r3,r1
 1838 0018 7B71     	 strb r3,[r7,#5]
 1839 001a 1346     	 mov r3,r2
 1840 001c 7B80     	 strh r3,[r7,#2]
 418:../SSD1306/ssd1306.c ****     #define CIRCLE_APPROXIMATION_SEGMENTS 36
 419:../SSD1306/ssd1306.c ****     float approx_degree;
 420:../SSD1306/ssd1306.c ****     uint32_t approx_segments;
 421:../SSD1306/ssd1306.c ****     uint8_t xp1,xp2;
 422:../SSD1306/ssd1306.c ****     uint8_t yp1,yp2;
 423:../SSD1306/ssd1306.c ****     uint32_t count = 0;
 1841              	 .loc 3 423 0
 1842 001e 0023     	 movs r3,#0
 1843 0020 FB61     	 str r3,[r7,#28]
 424:../SSD1306/ssd1306.c ****     uint32_t loc_sweep = 0;
 1844              	 .loc 3 424 0
 1845 0022 0023     	 movs r3,#0
 1846 0024 7B61     	 str r3,[r7,#20]
 425:../SSD1306/ssd1306.c ****     float rad;
 426:../SSD1306/ssd1306.c ****     
 427:../SSD1306/ssd1306.c ****     loc_sweep = ssd1306_NormalizeTo0_360(sweep);
 1847              	 .loc 3 427 0
 1848 0026 3B8E     	 ldrh r3,[r7,#48]
 1849 0028 1846     	 mov r0,r3
 1850 002a FFF7FEFF 	 bl ssd1306_NormalizeTo0_360
 1851 002e 0346     	 mov r3,r0
 1852 0030 7B61     	 str r3,[r7,#20]
 428:../SSD1306/ssd1306.c ****     
 429:../SSD1306/ssd1306.c ****     count = (ssd1306_NormalizeTo0_360(start_angle) * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1853              	 .loc 3 429 0
 1854 0032 7B88     	 ldrh r3,[r7,#2]
 1855 0034 1846     	 mov r0,r3
 1856 0036 FFF7FEFF 	 bl ssd1306_NormalizeTo0_360
 1857 003a 0346     	 mov r3,r0
 1858 003c 1A46     	 mov r2,r3
 1859 003e 1346     	 mov r3,r2
 1860 0040 DB00     	 lsls r3,r3,#3
 1861 0042 1344     	 add r3,r3,r2
 1862 0044 9B00     	 lsls r3,r3,#2
 1863 0046 734A     	 ldr r2,.L113
 1864 0048 82FB0312 	 smull r1,r2,r2,r3
 1865 004c 1A44     	 add r2,r2,r3
 1866 004e 1212     	 asrs r2,r2,#8
 1867 0050 DB17     	 asrs r3,r3,#31
 1868 0052 D31A     	 subs r3,r2,r3
 1869 0054 FB61     	 str r3,[r7,#28]
 430:../SSD1306/ssd1306.c ****     approx_segments = (loc_sweep * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1870              	 .loc 3 430 0
 1871 0056 7A69     	 ldr r2,[r7,#20]
 1872 0058 1346     	 mov r3,r2
 1873 005a DB00     	 lsls r3,r3,#3
 1874 005c 1344     	 add r3,r3,r2
 1875 005e 9B00     	 lsls r3,r3,#2
 1876 0060 DB08     	 lsrs r3,r3,#3
 1877 0062 6D4A     	 ldr r2,.L113+4
 1878 0064 A2FB0323 	 umull r2,r3,r2,r3
 1879 0068 9B08     	 lsrs r3,r3,#2
 1880 006a 3B61     	 str r3,[r7,#16]
 431:../SSD1306/ssd1306.c ****     approx_degree = loc_sweep / (float)approx_segments;
 1881              	 .loc 3 431 0
 1882 006c 7B69     	 ldr r3,[r7,#20]
 1883 006e 07EE903A 	 fmsr s15,r3
 1884 0072 B8EE677A 	 fuitos s14,s15
 1885 0076 3B69     	 ldr r3,[r7,#16]
 1886 0078 07EE903A 	 fmsr s15,r3
 1887 007c F8EE677A 	 fuitos s15,s15
 1888 0080 C7EE277A 	 fdivs s15,s14,s15
 1889 0084 C7ED037A 	 fsts s15,[r7,#12]
 432:../SSD1306/ssd1306.c ****     while(count < approx_segments)
 1890              	 .loc 3 432 0
 1891 0088 BBE0     	 b .L108
 1892              	.L111:
 433:../SSD1306/ssd1306.c ****     {
 434:../SSD1306/ssd1306.c ****         rad = ssd1306_DegToRad(count*approx_degree);
 1893              	 .loc 3 434 0
 1894 008a FB69     	 ldr r3,[r7,#28]
 1895 008c 07EE903A 	 fmsr s15,r3
 1896 0090 B8EE677A 	 fuitos s14,s15
 1897 0094 D7ED037A 	 flds s15,[r7,#12]
 1898 0098 67EE277A 	 fmuls s15,s14,s15
 1899 009c 17EE900A 	 fmrs r0,s15
 1900 00a0 FFF7FEFF 	 bl ssd1306_DegToRad
 1901 00a4 B861     	 str r0,[r7,#24]
 435:../SSD1306/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1902              	 .loc 3 435 0
 1903 00a6 B869     	 ldr r0,[r7,#24]
 1904 00a8 FFF7FEFF 	 bl __aeabi_f2d
 1905 00ac 0246     	 mov r2,r0
 1906 00ae 0B46     	 mov r3,r1
 1907 00b0 1046     	 mov r0,r2
 1908 00b2 1946     	 mov r1,r3
 1909 00b4 FFF7FEFF 	 bl sin
 1910 00b8 0446     	 mov r4,r0
 1911 00ba 0D46     	 mov r5,r1
 1912 00bc 7B79     	 ldrb r3,[r7,#5]
 1913 00be 1846     	 mov r0,r3
 1914 00c0 FFF7FEFF 	 bl __aeabi_i2d
 1915 00c4 0246     	 mov r2,r0
 1916 00c6 0B46     	 mov r3,r1
 1917 00c8 2046     	 mov r0,r4
 1918 00ca 2946     	 mov r1,r5
 1919 00cc FFF7FEFF 	 bl __aeabi_dmul
 1920 00d0 0246     	 mov r2,r0
 1921 00d2 0B46     	 mov r3,r1
 1922 00d4 1046     	 mov r0,r2
 1923 00d6 1946     	 mov r1,r3
 1924 00d8 FFF7FEFF 	 bl __aeabi_d2iz
 1925 00dc 0346     	 mov r3,r0
 1926 00de DBB2     	 uxtb r3,r3
 1927 00e0 DAB2     	 uxtb r2,r3
 1928 00e2 FB79     	 ldrb r3,[r7,#7]
 1929 00e4 1344     	 add r3,r3,r2
 1930 00e6 FB72     	 strb r3,[r7,#11]
 436:../SSD1306/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1931              	 .loc 3 436 0
 1932 00e8 B869     	 ldr r0,[r7,#24]
 1933 00ea FFF7FEFF 	 bl __aeabi_f2d
 1934 00ee 0246     	 mov r2,r0
 1935 00f0 0B46     	 mov r3,r1
 1936 00f2 1046     	 mov r0,r2
 1937 00f4 1946     	 mov r1,r3
 1938 00f6 FFF7FEFF 	 bl cos
 1939 00fa 0446     	 mov r4,r0
 1940 00fc 0D46     	 mov r5,r1
 1941 00fe 7B79     	 ldrb r3,[r7,#5]
 1942 0100 1846     	 mov r0,r3
 1943 0102 FFF7FEFF 	 bl __aeabi_i2d
 1944 0106 0246     	 mov r2,r0
 1945 0108 0B46     	 mov r3,r1
 1946 010a 2046     	 mov r0,r4
 1947 010c 2946     	 mov r1,r5
 1948 010e FFF7FEFF 	 bl __aeabi_dmul
 1949 0112 0246     	 mov r2,r0
 1950 0114 0B46     	 mov r3,r1
 1951 0116 1046     	 mov r0,r2
 1952 0118 1946     	 mov r1,r3
 1953 011a FFF7FEFF 	 bl __aeabi_d2iz
 1954 011e 0346     	 mov r3,r0
 1955 0120 DBB2     	 uxtb r3,r3
 1956 0122 DAB2     	 uxtb r2,r3
 1957 0124 BB79     	 ldrb r3,[r7,#6]
 1958 0126 1344     	 add r3,r3,r2
 1959 0128 BB72     	 strb r3,[r7,#10]
 437:../SSD1306/ssd1306.c ****         count++;
 1960              	 .loc 3 437 0
 1961 012a FB69     	 ldr r3,[r7,#28]
 1962 012c 0133     	 adds r3,r3,#1
 1963 012e FB61     	 str r3,[r7,#28]
 438:../SSD1306/ssd1306.c ****         if(count != approx_segments)
 1964              	 .loc 3 438 0
 1965 0130 FA69     	 ldr r2,[r7,#28]
 1966 0132 3B69     	 ldr r3,[r7,#16]
 1967 0134 9A42     	 cmp r2,r3
 1968 0136 0ED0     	 beq .L109
 439:../SSD1306/ssd1306.c ****         {
 440:../SSD1306/ssd1306.c ****             rad = ssd1306_DegToRad(count*approx_degree);
 1969              	 .loc 3 440 0
 1970 0138 FB69     	 ldr r3,[r7,#28]
 1971 013a 07EE903A 	 fmsr s15,r3
 1972 013e B8EE677A 	 fuitos s14,s15
 1973 0142 D7ED037A 	 flds s15,[r7,#12]
 1974 0146 67EE277A 	 fmuls s15,s14,s15
 1975 014a 17EE900A 	 fmrs r0,s15
 1976 014e FFF7FEFF 	 bl ssd1306_DegToRad
 1977 0152 B861     	 str r0,[r7,#24]
 1978 0154 09E0     	 b .L110
 1979              	.L109:
 441:../SSD1306/ssd1306.c ****         }
 442:../SSD1306/ssd1306.c ****         else
 443:../SSD1306/ssd1306.c ****         {            
 444:../SSD1306/ssd1306.c ****             rad = ssd1306_DegToRad(loc_sweep);
 1980              	 .loc 3 444 0
 1981 0156 7B69     	 ldr r3,[r7,#20]
 1982 0158 07EE903A 	 fmsr s15,r3
 1983 015c F8EE677A 	 fuitos s15,s15
 1984 0160 17EE900A 	 fmrs r0,s15
 1985 0164 FFF7FEFF 	 bl ssd1306_DegToRad
 1986 0168 B861     	 str r0,[r7,#24]
 1987              	.L110:
 445:../SSD1306/ssd1306.c ****         }
 446:../SSD1306/ssd1306.c ****         xp2 = x + (int8_t)(sin(rad)*radius);
 1988              	 .loc 3 446 0
 1989 016a B869     	 ldr r0,[r7,#24]
 1990 016c FFF7FEFF 	 bl __aeabi_f2d
 1991 0170 0246     	 mov r2,r0
 1992 0172 0B46     	 mov r3,r1
 1993 0174 1046     	 mov r0,r2
 1994 0176 1946     	 mov r1,r3
 1995 0178 FFF7FEFF 	 bl sin
 1996 017c 0446     	 mov r4,r0
 1997 017e 0D46     	 mov r5,r1
 1998 0180 7B79     	 ldrb r3,[r7,#5]
 1999 0182 1846     	 mov r0,r3
 2000 0184 FFF7FEFF 	 bl __aeabi_i2d
 2001 0188 0246     	 mov r2,r0
 2002 018a 0B46     	 mov r3,r1
 2003 018c 2046     	 mov r0,r4
 2004 018e 2946     	 mov r1,r5
 2005 0190 FFF7FEFF 	 bl __aeabi_dmul
 2006 0194 0246     	 mov r2,r0
 2007 0196 0B46     	 mov r3,r1
 2008 0198 1046     	 mov r0,r2
 2009 019a 1946     	 mov r1,r3
 2010 019c FFF7FEFF 	 bl __aeabi_d2iz
 2011 01a0 0346     	 mov r3,r0
 2012 01a2 DBB2     	 uxtb r3,r3
 2013 01a4 DAB2     	 uxtb r2,r3
 2014 01a6 FB79     	 ldrb r3,[r7,#7]
 2015 01a8 1344     	 add r3,r3,r2
 2016 01aa 7B72     	 strb r3,[r7,#9]
 447:../SSD1306/ssd1306.c ****         yp2 = y + (int8_t)(cos(rad)*radius);    
 2017              	 .loc 3 447 0
 2018 01ac B869     	 ldr r0,[r7,#24]
 2019 01ae FFF7FEFF 	 bl __aeabi_f2d
 2020 01b2 0246     	 mov r2,r0
 2021 01b4 0B46     	 mov r3,r1
 2022 01b6 1046     	 mov r0,r2
 2023 01b8 1946     	 mov r1,r3
 2024 01ba FFF7FEFF 	 bl cos
 2025 01be 0446     	 mov r4,r0
 2026 01c0 0D46     	 mov r5,r1
 2027 01c2 7B79     	 ldrb r3,[r7,#5]
 2028 01c4 1846     	 mov r0,r3
 2029 01c6 FFF7FEFF 	 bl __aeabi_i2d
 2030 01ca 0246     	 mov r2,r0
 2031 01cc 0B46     	 mov r3,r1
 2032 01ce 2046     	 mov r0,r4
 2033 01d0 2946     	 mov r1,r5
 2034 01d2 FFF7FEFF 	 bl __aeabi_dmul
 2035 01d6 0246     	 mov r2,r0
 2036 01d8 0B46     	 mov r3,r1
 2037 01da 1046     	 mov r0,r2
 2038 01dc 1946     	 mov r1,r3
 2039 01de FFF7FEFF 	 bl __aeabi_d2iz
 2040 01e2 0346     	 mov r3,r0
 2041 01e4 DBB2     	 uxtb r3,r3
 2042 01e6 DAB2     	 uxtb r2,r3
 2043 01e8 BB79     	 ldrb r3,[r7,#6]
 2044 01ea 1344     	 add r3,r3,r2
 2045 01ec 3B72     	 strb r3,[r7,#8]
 448:../SSD1306/ssd1306.c ****         ssd1306_Line(xp1,yp1,xp2,yp2,color);
 2046              	 .loc 3 448 0
 2047 01ee F87A     	 ldrb r0,[r7,#11]
 2048 01f0 B97A     	 ldrb r1,[r7,#10]
 2049 01f2 7A7A     	 ldrb r2,[r7,#9]
 2050 01f4 3C7A     	 ldrb r4,[r7,#8]
 2051 01f6 97F83430 	 ldrb r3,[r7,#52]
 2052 01fa 0093     	 str r3,[sp]
 2053 01fc 2346     	 mov r3,r4
 2054 01fe FFF7FEFF 	 bl ssd1306_Line
 2055              	.L108:
 432:../SSD1306/ssd1306.c ****     {
 2056              	 .loc 3 432 0
 2057 0202 FA69     	 ldr r2,[r7,#28]
 2058 0204 3B69     	 ldr r3,[r7,#16]
 2059 0206 9A42     	 cmp r2,r3
 2060 0208 FFF43FAF 	 bcc .L111
 449:../SSD1306/ssd1306.c ****     }
 450:../SSD1306/ssd1306.c ****     
 451:../SSD1306/ssd1306.c ****     return;
 2061              	 .loc 3 451 0
 2062 020c 00BF     	 nop
 452:../SSD1306/ssd1306.c **** }
 2063              	 .loc 3 452 0
 2064 020e 2037     	 adds r7,r7,#32
 2065              	.LCFI105:
 2066              	 .cfi_def_cfa_offset 16
 2067 0210 BD46     	 mov sp,r7
 2068              	.LCFI106:
 2069              	 .cfi_def_cfa_register 13
 2070              	 
 2071 0212 B0BD     	 pop {r4,r5,r7,pc}
 2072              	.L114:
 2073              	 .align 2
 2074              	.L113:
 2075 0214 B7600BB6 	 .word -1240768329
 2076 0218 176CC116 	 .word 381774871
 2077              	 .cfi_endproc
 2078              	.LFE279:
 2080              	 .section .text.ssd1306_DrawCircle,"ax",%progbits
 2081              	 .align 2
 2082              	 .global ssd1306_DrawCircle
 2083              	 .thumb
 2084              	 .thumb_func
 2086              	ssd1306_DrawCircle:
 2087              	.LFB280:
 453:../SSD1306/ssd1306.c **** //Draw circle by Bresenhem's algorithm
 454:../SSD1306/ssd1306.c **** void ssd1306_DrawCircle(uint8_t par_x,uint8_t par_y,uint8_t par_r,SSD1306_COLOR par_color) {
 2088              	 .loc 3 454 0
 2089              	 .cfi_startproc
 2090              	 
 2091              	 
 2092 0000 90B5     	 push {r4,r7,lr}
 2093              	.LCFI107:
 2094              	 .cfi_def_cfa_offset 12
 2095              	 .cfi_offset 4,-12
 2096              	 .cfi_offset 7,-8
 2097              	 .cfi_offset 14,-4
 2098 0002 87B0     	 sub sp,sp,#28
 2099              	.LCFI108:
 2100              	 .cfi_def_cfa_offset 40
 2101 0004 00AF     	 add r7,sp,#0
 2102              	.LCFI109:
 2103              	 .cfi_def_cfa_register 7
 2104 0006 0446     	 mov r4,r0
 2105 0008 0846     	 mov r0,r1
 2106 000a 1146     	 mov r1,r2
 2107 000c 1A46     	 mov r2,r3
 2108 000e 2346     	 mov r3,r4
 2109 0010 FB71     	 strb r3,[r7,#7]
 2110 0012 0346     	 mov r3,r0
 2111 0014 BB71     	 strb r3,[r7,#6]
 2112 0016 0B46     	 mov r3,r1
 2113 0018 7B71     	 strb r3,[r7,#5]
 2114 001a 1346     	 mov r3,r2
 2115 001c 3B71     	 strb r3,[r7,#4]
 455:../SSD1306/ssd1306.c ****   int32_t x = -par_r;
 2116              	 .loc 3 455 0
 2117 001e 7B79     	 ldrb r3,[r7,#5]
 2118 0020 5B42     	 negs r3,r3
 2119 0022 7B61     	 str r3,[r7,#20]
 456:../SSD1306/ssd1306.c ****   int32_t y = 0;
 2120              	 .loc 3 456 0
 2121 0024 0023     	 movs r3,#0
 2122 0026 3B61     	 str r3,[r7,#16]
 457:../SSD1306/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 2123              	 .loc 3 457 0
 2124 0028 7A79     	 ldrb r2,[r7,#5]
 2125 002a 1346     	 mov r3,r2
 2126 002c DB07     	 lsls r3,r3,#31
 2127 002e 9B1A     	 subs r3,r3,r2
 2128 0030 5B00     	 lsls r3,r3,#1
 2129 0032 0233     	 adds r3,r3,#2
 2130 0034 FB60     	 str r3,[r7,#12]
 458:../SSD1306/ssd1306.c ****   int32_t e2;
 459:../SSD1306/ssd1306.c **** 
 460:../SSD1306/ssd1306.c ****   if (par_x >= SSD1306_WIDTH || par_y >= SSD1306_HEIGHT) {
 2131              	 .loc 3 460 0
 2132 0036 FB79     	 ldrb r3,[r7,#7]
 2133 0038 812B     	 cmp r3,#129
 2134 003a 02D8     	 bhi .L116
 2135              	 .loc 3 460 0 is_stmt 0 discriminator 1
 2136 003c BB79     	 ldrb r3,[r7,#6]
 2137 003e 1F2B     	 cmp r3,#31
 2138 0040 00D9     	 bls .L117
 2139              	.L116:
 461:../SSD1306/ssd1306.c ****     return;
 2140              	 .loc 3 461 0 is_stmt 1
 2141 0042 6AE0     	 b .L115
 2142              	.L117:
 462:../SSD1306/ssd1306.c ****   }
 463:../SSD1306/ssd1306.c **** 
 464:../SSD1306/ssd1306.c ****     do {
 465:../SSD1306/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 2143              	 .loc 3 465 0
 2144 0044 7B69     	 ldr r3,[r7,#20]
 2145 0046 DBB2     	 uxtb r3,r3
 2146 0048 FA79     	 ldrb r2,[r7,#7]
 2147 004a D31A     	 subs r3,r2,r3
 2148 004c D9B2     	 uxtb r1,r3
 2149 004e 3B69     	 ldr r3,[r7,#16]
 2150 0050 DAB2     	 uxtb r2,r3
 2151 0052 BB79     	 ldrb r3,[r7,#6]
 2152 0054 1344     	 add r3,r3,r2
 2153 0056 DAB2     	 uxtb r2,r3
 2154 0058 3B79     	 ldrb r3,[r7,#4]
 2155 005a 0846     	 mov r0,r1
 2156 005c 1146     	 mov r1,r2
 2157 005e 1A46     	 mov r2,r3
 2158 0060 FFF7FEFF 	 bl ssd1306_DrawPixel
 466:../SSD1306/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 2159              	 .loc 3 466 0
 2160 0064 7B69     	 ldr r3,[r7,#20]
 2161 0066 DAB2     	 uxtb r2,r3
 2162 0068 FB79     	 ldrb r3,[r7,#7]
 2163 006a 1344     	 add r3,r3,r2
 2164 006c D9B2     	 uxtb r1,r3
 2165 006e 3B69     	 ldr r3,[r7,#16]
 2166 0070 DAB2     	 uxtb r2,r3
 2167 0072 BB79     	 ldrb r3,[r7,#6]
 2168 0074 1344     	 add r3,r3,r2
 2169 0076 DAB2     	 uxtb r2,r3
 2170 0078 3B79     	 ldrb r3,[r7,#4]
 2171 007a 0846     	 mov r0,r1
 2172 007c 1146     	 mov r1,r2
 2173 007e 1A46     	 mov r2,r3
 2174 0080 FFF7FEFF 	 bl ssd1306_DrawPixel
 467:../SSD1306/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 2175              	 .loc 3 467 0
 2176 0084 7B69     	 ldr r3,[r7,#20]
 2177 0086 DAB2     	 uxtb r2,r3
 2178 0088 FB79     	 ldrb r3,[r7,#7]
 2179 008a 1344     	 add r3,r3,r2
 2180 008c D9B2     	 uxtb r1,r3
 2181 008e 3B69     	 ldr r3,[r7,#16]
 2182 0090 DBB2     	 uxtb r3,r3
 2183 0092 BA79     	 ldrb r2,[r7,#6]
 2184 0094 D31A     	 subs r3,r2,r3
 2185 0096 DAB2     	 uxtb r2,r3
 2186 0098 3B79     	 ldrb r3,[r7,#4]
 2187 009a 0846     	 mov r0,r1
 2188 009c 1146     	 mov r1,r2
 2189 009e 1A46     	 mov r2,r3
 2190 00a0 FFF7FEFF 	 bl ssd1306_DrawPixel
 468:../SSD1306/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 2191              	 .loc 3 468 0
 2192 00a4 7B69     	 ldr r3,[r7,#20]
 2193 00a6 DBB2     	 uxtb r3,r3
 2194 00a8 FA79     	 ldrb r2,[r7,#7]
 2195 00aa D31A     	 subs r3,r2,r3
 2196 00ac D9B2     	 uxtb r1,r3
 2197 00ae 3B69     	 ldr r3,[r7,#16]
 2198 00b0 DBB2     	 uxtb r3,r3
 2199 00b2 BA79     	 ldrb r2,[r7,#6]
 2200 00b4 D31A     	 subs r3,r2,r3
 2201 00b6 DAB2     	 uxtb r2,r3
 2202 00b8 3B79     	 ldrb r3,[r7,#4]
 2203 00ba 0846     	 mov r0,r1
 2204 00bc 1146     	 mov r1,r2
 2205 00be 1A46     	 mov r2,r3
 2206 00c0 FFF7FEFF 	 bl ssd1306_DrawPixel
 469:../SSD1306/ssd1306.c ****         e2 = err;
 2207              	 .loc 3 469 0
 2208 00c4 FB68     	 ldr r3,[r7,#12]
 2209 00c6 BB60     	 str r3,[r7,#8]
 470:../SSD1306/ssd1306.c ****         if (e2 <= y) {
 2210              	 .loc 3 470 0
 2211 00c8 BA68     	 ldr r2,[r7,#8]
 2212 00ca 3B69     	 ldr r3,[r7,#16]
 2213 00cc 9A42     	 cmp r2,r3
 2214 00ce 13DC     	 bgt .L119
 471:../SSD1306/ssd1306.c ****             y++;
 2215              	 .loc 3 471 0
 2216 00d0 3B69     	 ldr r3,[r7,#16]
 2217 00d2 0133     	 adds r3,r3,#1
 2218 00d4 3B61     	 str r3,[r7,#16]
 472:../SSD1306/ssd1306.c ****             err = err + (y * 2 + 1);
 2219              	 .loc 3 472 0
 2220 00d6 3B69     	 ldr r3,[r7,#16]
 2221 00d8 5B00     	 lsls r3,r3,#1
 2222 00da 0133     	 adds r3,r3,#1
 2223 00dc FA68     	 ldr r2,[r7,#12]
 2224 00de 1344     	 add r3,r3,r2
 2225 00e0 FB60     	 str r3,[r7,#12]
 473:../SSD1306/ssd1306.c ****             if(-x == y && e2 <= x) {
 2226              	 .loc 3 473 0
 2227 00e2 7B69     	 ldr r3,[r7,#20]
 2228 00e4 5A42     	 negs r2,r3
 2229 00e6 3B69     	 ldr r3,[r7,#16]
 2230 00e8 9A42     	 cmp r2,r3
 2231 00ea 05D1     	 bne .L119
 2232              	 .loc 3 473 0 is_stmt 0 discriminator 1
 2233 00ec BA68     	 ldr r2,[r7,#8]
 2234 00ee 7B69     	 ldr r3,[r7,#20]
 2235 00f0 9A42     	 cmp r2,r3
 2236 00f2 01DC     	 bgt .L119
 474:../SSD1306/ssd1306.c ****               e2 = 0;
 2237              	 .loc 3 474 0 is_stmt 1
 2238 00f4 0023     	 movs r3,#0
 2239 00f6 BB60     	 str r3,[r7,#8]
 2240              	.L119:
 475:../SSD1306/ssd1306.c ****             }
 476:../SSD1306/ssd1306.c ****             else
 477:../SSD1306/ssd1306.c ****             {
 478:../SSD1306/ssd1306.c ****               /*nothing to do*/
 479:../SSD1306/ssd1306.c ****             }
 480:../SSD1306/ssd1306.c ****         }
 481:../SSD1306/ssd1306.c ****         else
 482:../SSD1306/ssd1306.c ****         {
 483:../SSD1306/ssd1306.c ****           /*nothing to do*/
 484:../SSD1306/ssd1306.c ****         }
 485:../SSD1306/ssd1306.c ****         if(e2 > x) {
 2241              	 .loc 3 485 0
 2242 00f8 BA68     	 ldr r2,[r7,#8]
 2243 00fa 7B69     	 ldr r3,[r7,#20]
 2244 00fc 9A42     	 cmp r2,r3
 2245 00fe 08DD     	 ble .L120
 486:../SSD1306/ssd1306.c ****           x++;
 2246              	 .loc 3 486 0
 2247 0100 7B69     	 ldr r3,[r7,#20]
 2248 0102 0133     	 adds r3,r3,#1
 2249 0104 7B61     	 str r3,[r7,#20]
 487:../SSD1306/ssd1306.c ****           err = err + (x * 2 + 1);
 2250              	 .loc 3 487 0
 2251 0106 7B69     	 ldr r3,[r7,#20]
 2252 0108 5B00     	 lsls r3,r3,#1
 2253 010a 0133     	 adds r3,r3,#1
 2254 010c FA68     	 ldr r2,[r7,#12]
 2255 010e 1344     	 add r3,r3,r2
 2256 0110 FB60     	 str r3,[r7,#12]
 2257              	.L120:
 488:../SSD1306/ssd1306.c ****         }
 489:../SSD1306/ssd1306.c ****         else
 490:../SSD1306/ssd1306.c ****         {
 491:../SSD1306/ssd1306.c ****           /*nothing to do*/
 492:../SSD1306/ssd1306.c ****         }
 493:../SSD1306/ssd1306.c ****     } while(x <= 0);
 2258              	 .loc 3 493 0
 2259 0112 7B69     	 ldr r3,[r7,#20]
 2260 0114 002B     	 cmp r3,#0
 2261 0116 95DD     	 ble .L117
 494:../SSD1306/ssd1306.c **** 
 495:../SSD1306/ssd1306.c ****     return;
 2262              	 .loc 3 495 0 discriminator 2
 2263 0118 00BF     	 nop
 2264              	.L115:
 496:../SSD1306/ssd1306.c **** }
 2265              	 .loc 3 496 0
 2266 011a 1C37     	 adds r7,r7,#28
 2267              	.LCFI110:
 2268              	 .cfi_def_cfa_offset 12
 2269 011c BD46     	 mov sp,r7
 2270              	.LCFI111:
 2271              	 .cfi_def_cfa_register 13
 2272              	 
 2273 011e 90BD     	 pop {r4,r7,pc}
 2274              	 .cfi_endproc
 2275              	.LFE280:
 2277              	 .section .text.ssd1306_DrawRectangle,"ax",%progbits
 2278              	 .align 2
 2279              	 .global ssd1306_DrawRectangle
 2280              	 .thumb
 2281              	 .thumb_func
 2283              	ssd1306_DrawRectangle:
 2284              	.LFB281:
 497:../SSD1306/ssd1306.c **** 
 498:../SSD1306/ssd1306.c **** //Draw rectangle
 499:../SSD1306/ssd1306.c **** void ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 2285              	 .loc 3 499 0
 2286              	 .cfi_startproc
 2287              	 
 2288              	 
 2289 0000 90B5     	 push {r4,r7,lr}
 2290              	.LCFI112:
 2291              	 .cfi_def_cfa_offset 12
 2292              	 .cfi_offset 4,-12
 2293              	 .cfi_offset 7,-8
 2294              	 .cfi_offset 14,-4
 2295 0002 85B0     	 sub sp,sp,#20
 2296              	.LCFI113:
 2297              	 .cfi_def_cfa_offset 32
 2298 0004 02AF     	 add r7,sp,#8
 2299              	.LCFI114:
 2300              	 .cfi_def_cfa 7,24
 2301 0006 0446     	 mov r4,r0
 2302 0008 0846     	 mov r0,r1
 2303 000a 1146     	 mov r1,r2
 2304 000c 1A46     	 mov r2,r3
 2305 000e 2346     	 mov r3,r4
 2306 0010 FB71     	 strb r3,[r7,#7]
 2307 0012 0346     	 mov r3,r0
 2308 0014 BB71     	 strb r3,[r7,#6]
 2309 0016 0B46     	 mov r3,r1
 2310 0018 7B71     	 strb r3,[r7,#5]
 2311 001a 1346     	 mov r3,r2
 2312 001c 3B71     	 strb r3,[r7,#4]
 500:../SSD1306/ssd1306.c ****   ssd1306_Line(x1,y1,x2,y1,color);
 2313              	 .loc 3 500 0
 2314 001e F879     	 ldrb r0,[r7,#7]
 2315 0020 B979     	 ldrb r1,[r7,#6]
 2316 0022 7A79     	 ldrb r2,[r7,#5]
 2317 0024 BC79     	 ldrb r4,[r7,#6]
 2318 0026 3B7E     	 ldrb r3,[r7,#24]
 2319 0028 0093     	 str r3,[sp]
 2320 002a 2346     	 mov r3,r4
 2321 002c FFF7FEFF 	 bl ssd1306_Line
 501:../SSD1306/ssd1306.c ****   ssd1306_Line(x2,y1,x2,y2,color);
 2322              	 .loc 3 501 0
 2323 0030 7879     	 ldrb r0,[r7,#5]
 2324 0032 B979     	 ldrb r1,[r7,#6]
 2325 0034 7A79     	 ldrb r2,[r7,#5]
 2326 0036 3C79     	 ldrb r4,[r7,#4]
 2327 0038 3B7E     	 ldrb r3,[r7,#24]
 2328 003a 0093     	 str r3,[sp]
 2329 003c 2346     	 mov r3,r4
 2330 003e FFF7FEFF 	 bl ssd1306_Line
 502:../SSD1306/ssd1306.c ****   ssd1306_Line(x2,y2,x1,y2,color);
 2331              	 .loc 3 502 0
 2332 0042 7879     	 ldrb r0,[r7,#5]
 2333 0044 3979     	 ldrb r1,[r7,#4]
 2334 0046 FA79     	 ldrb r2,[r7,#7]
 2335 0048 3C79     	 ldrb r4,[r7,#4]
 2336 004a 3B7E     	 ldrb r3,[r7,#24]
 2337 004c 0093     	 str r3,[sp]
 2338 004e 2346     	 mov r3,r4
 2339 0050 FFF7FEFF 	 bl ssd1306_Line
 503:../SSD1306/ssd1306.c ****   ssd1306_Line(x1,y2,x1,y1,color);
 2340              	 .loc 3 503 0
 2341 0054 F879     	 ldrb r0,[r7,#7]
 2342 0056 3979     	 ldrb r1,[r7,#4]
 2343 0058 FA79     	 ldrb r2,[r7,#7]
 2344 005a BC79     	 ldrb r4,[r7,#6]
 2345 005c 3B7E     	 ldrb r3,[r7,#24]
 2346 005e 0093     	 str r3,[sp]
 2347 0060 2346     	 mov r3,r4
 2348 0062 FFF7FEFF 	 bl ssd1306_Line
 504:../SSD1306/ssd1306.c **** 
 505:../SSD1306/ssd1306.c ****   return;
 2349              	 .loc 3 505 0
 2350 0066 00BF     	 nop
 506:../SSD1306/ssd1306.c **** }
 2351              	 .loc 3 506 0
 2352 0068 0C37     	 adds r7,r7,#12
 2353              	.LCFI115:
 2354              	 .cfi_def_cfa_offset 12
 2355 006a BD46     	 mov sp,r7
 2356              	.LCFI116:
 2357              	 .cfi_def_cfa_register 13
 2358              	 
 2359 006c 90BD     	 pop {r4,r7,pc}
 2360              	 .cfi_endproc
 2361              	.LFE281:
 2363 006e 00BF     	 .section .text.ssd1306_SetContrast,"ax",%progbits
 2364              	 .align 2
 2365              	 .global ssd1306_SetContrast
 2366              	 .thumb
 2367              	 .thumb_func
 2369              	ssd1306_SetContrast:
 2370              	.LFB282:
 507:../SSD1306/ssd1306.c **** 
 508:../SSD1306/ssd1306.c **** void ssd1306_SetContrast(const uint8_t value) {
 2371              	 .loc 3 508 0
 2372              	 .cfi_startproc
 2373              	 
 2374              	 
 2375 0000 80B5     	 push {r7,lr}
 2376              	.LCFI117:
 2377              	 .cfi_def_cfa_offset 8
 2378              	 .cfi_offset 7,-8
 2379              	 .cfi_offset 14,-4
 2380 0002 84B0     	 sub sp,sp,#16
 2381              	.LCFI118:
 2382              	 .cfi_def_cfa_offset 24
 2383 0004 00AF     	 add r7,sp,#0
 2384              	.LCFI119:
 2385              	 .cfi_def_cfa_register 7
 2386 0006 0346     	 mov r3,r0
 2387 0008 FB71     	 strb r3,[r7,#7]
 509:../SSD1306/ssd1306.c ****     const uint8_t kSetContrastControlRegister = 0x81;
 2388              	 .loc 3 509 0
 2389 000a 8123     	 movs r3,#129
 2390 000c FB73     	 strb r3,[r7,#15]
 510:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(kSetContrastControlRegister);
 2391              	 .loc 3 510 0
 2392 000e FB7B     	 ldrb r3,[r7,#15]
 2393 0010 1846     	 mov r0,r3
 2394 0012 FFF7FEFF 	 bl ssd1306_WriteCommand
 511:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(value);
 2395              	 .loc 3 511 0
 2396 0016 FB79     	 ldrb r3,[r7,#7]
 2397 0018 1846     	 mov r0,r3
 2398 001a FFF7FEFF 	 bl ssd1306_WriteCommand
 512:../SSD1306/ssd1306.c **** }
 2399              	 .loc 3 512 0
 2400 001e 1037     	 adds r7,r7,#16
 2401              	.LCFI120:
 2402              	 .cfi_def_cfa_offset 8
 2403 0020 BD46     	 mov sp,r7
 2404              	.LCFI121:
 2405              	 .cfi_def_cfa_register 13
 2406              	 
 2407 0022 80BD     	 pop {r7,pc}
 2408              	 .cfi_endproc
 2409              	.LFE282:
 2411              	 .section .text.ssd1306_SetDisplayOn,"ax",%progbits
 2412              	 .align 2
 2413              	 .global ssd1306_SetDisplayOn
 2414              	 .thumb
 2415              	 .thumb_func
 2417              	ssd1306_SetDisplayOn:
 2418              	.LFB283:
 513:../SSD1306/ssd1306.c **** 
 514:../SSD1306/ssd1306.c **** void ssd1306_SetDisplayOn(const uint8_t on) {
 2419              	 .loc 3 514 0
 2420              	 .cfi_startproc
 2421              	 
 2422              	 
 2423 0000 80B5     	 push {r7,lr}
 2424              	.LCFI122:
 2425              	 .cfi_def_cfa_offset 8
 2426              	 .cfi_offset 7,-8
 2427              	 .cfi_offset 14,-4
 2428 0002 84B0     	 sub sp,sp,#16
 2429              	.LCFI123:
 2430              	 .cfi_def_cfa_offset 24
 2431 0004 00AF     	 add r7,sp,#0
 2432              	.LCFI124:
 2433              	 .cfi_def_cfa_register 7
 2434 0006 0346     	 mov r3,r0
 2435 0008 FB71     	 strb r3,[r7,#7]
 515:../SSD1306/ssd1306.c ****     uint8_t value;
 516:../SSD1306/ssd1306.c ****     if (on) {
 2436              	 .loc 3 516 0
 2437 000a FB79     	 ldrb r3,[r7,#7]
 2438 000c 002B     	 cmp r3,#0
 2439 000e 05D0     	 beq .L125
 517:../SSD1306/ssd1306.c ****         value = 0xAF;   // Display on
 2440              	 .loc 3 517 0
 2441 0010 AF23     	 movs r3,#175
 2442 0012 FB73     	 strb r3,[r7,#15]
 518:../SSD1306/ssd1306.c ****         SSD1306.DisplayOn = 1;
 2443              	 .loc 3 518 0
 2444 0014 074B     	 ldr r3,.L127
 2445 0016 0122     	 movs r2,#1
 2446 0018 9A71     	 strb r2,[r3,#6]
 2447 001a 04E0     	 b .L126
 2448              	.L125:
 519:../SSD1306/ssd1306.c ****     } else {
 520:../SSD1306/ssd1306.c ****         value = 0xAE;   // Display off
 2449              	 .loc 3 520 0
 2450 001c AE23     	 movs r3,#174
 2451 001e FB73     	 strb r3,[r7,#15]
 521:../SSD1306/ssd1306.c ****         SSD1306.DisplayOn = 0;
 2452              	 .loc 3 521 0
 2453 0020 044B     	 ldr r3,.L127
 2454 0022 0022     	 movs r2,#0
 2455 0024 9A71     	 strb r2,[r3,#6]
 2456              	.L126:
 522:../SSD1306/ssd1306.c ****     }
 523:../SSD1306/ssd1306.c ****     ssd1306_WriteCommand(value);
 2457              	 .loc 3 523 0
 2458 0026 FB7B     	 ldrb r3,[r7,#15]
 2459 0028 1846     	 mov r0,r3
 2460 002a FFF7FEFF 	 bl ssd1306_WriteCommand
 524:../SSD1306/ssd1306.c **** }
 2461              	 .loc 3 524 0
 2462 002e 1037     	 adds r7,r7,#16
 2463              	.LCFI125:
 2464              	 .cfi_def_cfa_offset 8
 2465 0030 BD46     	 mov sp,r7
 2466              	.LCFI126:
 2467              	 .cfi_def_cfa_register 13
 2468              	 
 2469 0032 80BD     	 pop {r7,pc}
 2470              	.L128:
 2471              	 .align 2
 2472              	.L127:
 2473 0034 00000000 	 .word SSD1306
 2474              	 .cfi_endproc
 2475              	.LFE283:
 2477              	 .section .text.ssd1306_GetDisplayOn,"ax",%progbits
 2478              	 .align 2
 2479              	 .global ssd1306_GetDisplayOn
 2480              	 .thumb
 2481              	 .thumb_func
 2483              	ssd1306_GetDisplayOn:
 2484              	.LFB284:
 525:../SSD1306/ssd1306.c **** 
 526:../SSD1306/ssd1306.c **** uint8_t ssd1306_GetDisplayOn() {
 2485              	 .loc 3 526 0
 2486              	 .cfi_startproc
 2487              	 
 2488              	 
 2489              	 
 2490 0000 80B4     	 push {r7}
 2491              	.LCFI127:
 2492              	 .cfi_def_cfa_offset 4
 2493              	 .cfi_offset 7,-4
 2494 0002 00AF     	 add r7,sp,#0
 2495              	.LCFI128:
 2496              	 .cfi_def_cfa_register 7
 527:../SSD1306/ssd1306.c ****     return SSD1306.DisplayOn;
 2497              	 .loc 3 527 0
 2498 0004 034B     	 ldr r3,.L131
 2499 0006 9B79     	 ldrb r3,[r3,#6]
 528:../SSD1306/ssd1306.c **** }
 2500              	 .loc 3 528 0
 2501 0008 1846     	 mov r0,r3
 2502 000a BD46     	 mov sp,r7
 2503              	.LCFI129:
 2504              	 .cfi_def_cfa_register 13
 2505              	 
 2506 000c 5DF8047B 	 ldr r7,[sp],#4
 2507              	.LCFI130:
 2508              	 .cfi_restore 7
 2509              	 .cfi_def_cfa_offset 0
 2510 0010 7047     	 bx lr
 2511              	.L132:
 2512 0012 00BF     	 .align 2
 2513              	.L131:
 2514 0014 00000000 	 .word SSD1306
 2515              	 .cfi_endproc
 2516              	.LFE284:
 2518              	 .text
 2519              	.Letext0:
 2520              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 2521              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2522              	 .file 6 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2523              	 .file 7 "../SSD1306/ssd1306_fonts.h"
 2524              	 .file 8 "C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/XMCLib/inc/xmc_spi.h"
 2525              	 .file 9 "../SSD1306/ssd1306.h"
 2526              	 .file 10 "C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/CMSIS/Include/cmsis_gcc.h"
 2527              	 .file 11 "C:/Users/fluky/Documents/GitHub/infineon_xmc4500_power2display/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ssd1306.c
    {standard input}:20     .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 XMC_USIC_CH_TXFIFO_IsFull
    {standard input}:70     .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 $t
    {standard input}:74     .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 XMC_USIC_CH_TXFIFO_IsEmpty
    {standard input}:119    .text.XMC_I2C_CH_GetStatusFlag:00000000 $t
    {standard input}:123    .text.XMC_I2C_CH_GetStatusFlag:00000000 XMC_I2C_CH_GetStatusFlag
    {standard input}:163    .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:167    .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:210    .bss.SSD1306_Buffer:00000000 $d
    {standard input}:213    .bss.SSD1306_Buffer:00000000 SSD1306_Buffer
                            *COM*:00000010 SSD1306
    {standard input}:217    .text.ssd1306_Reset:00000000 $t
    {standard input}:222    .text.ssd1306_Reset:00000000 ssd1306_Reset
    {standard input}:251    .text.ssd1306_WriteCommand:00000000 $t
    {standard input}:256    .text.ssd1306_WriteCommand:00000000 ssd1306_WriteCommand
    {standard input}:383    .text.ssd1306_WriteCommand:000000a8 $d
    {standard input}:388    .text.ssd1306_WriteData:00000000 $t
    {standard input}:393    .text.ssd1306_WriteData:00000000 ssd1306_WriteData
    {standard input}:540    .text.ssd1306_WriteData:000000c4 $d
    {standard input}:545    .text.ssd1306_FillBuffer:00000000 $t
    {standard input}:550    .text.ssd1306_FillBuffer:00000000 ssd1306_FillBuffer
    {standard input}:600    .text.ssd1306_FillBuffer:00000030 $d
    {standard input}:605    .text.ssd1306_Init:00000000 $t
    {standard input}:610    .text.ssd1306_Init:00000000 ssd1306_Init
    {standard input}:2417   .text.ssd1306_SetDisplayOn:00000000 ssd1306_SetDisplayOn
    {standard input}:2369   .text.ssd1306_SetContrast:00000000 ssd1306_SetContrast
    {standard input}:764    .text.ssd1306_Fill:00000000 ssd1306_Fill
    {standard input}:840    .text.ssd1306_UpdateScreen:00000000 ssd1306_UpdateScreen
    {standard input}:754    .text.ssd1306_Init:000000e8 $d
    {standard input}:759    .text.ssd1306_Fill:00000000 $t
    {standard input}:830    .text.ssd1306_Fill:00000040 $d
    {standard input}:835    .text.ssd1306_UpdateScreen:00000000 $t
    {standard input}:909    .text.ssd1306_UpdateScreen:00000050 $d
    {standard input}:914    .text.ssd1306_DrawPixel:00000000 $t
    {standard input}:919    .text.ssd1306_DrawPixel:00000000 ssd1306_DrawPixel
    {standard input}:1055   .text.ssd1306_DrawPixel:000000cc $d
    {standard input}:1061   .text.ssd1306_WriteChar:00000000 $t
    {standard input}:1066   .text.ssd1306_WriteChar:00000000 ssd1306_WriteChar
    {standard input}:1252   .text.ssd1306_WriteChar:00000114 $d
    {standard input}:1257   .text.ssd1306_WriteString:00000000 $t
    {standard input}:1262   .text.ssd1306_WriteString:00000000 ssd1306_WriteString
    {standard input}:1335   .text.ssd1306_SetCursor:00000000 $t
    {standard input}:1340   .text.ssd1306_SetCursor:00000000 ssd1306_SetCursor
    {standard input}:1388   .text.ssd1306_SetCursor:0000002c $d
    {standard input}:1393   .text.ssd1306_Line:00000000 $t
    {standard input}:1398   .text.ssd1306_Line:00000000 ssd1306_Line
    {standard input}:1560   .text.ssd1306_Polyline:00000000 $t
    {standard input}:1565   .text.ssd1306_Polyline:00000000 ssd1306_Polyline
    {standard input}:1658   .text.ssd1306_DegToRad:00000000 $t
    {standard input}:1662   .text.ssd1306_DegToRad:00000000 ssd1306_DegToRad
    {standard input}:1716   .text.ssd1306_DegToRad:00000048 $d
    {standard input}:1723   .text.ssd1306_NormalizeTo0_360:00000000 $t
    {standard input}:1727   .text.ssd1306_NormalizeTo0_360:00000000 ssd1306_NormalizeTo0_360
    {standard input}:1798   .text.ssd1306_NormalizeTo0_360:00000050 $d
    {standard input}:1805   .text.ssd1306_DrawArc:00000000 $t
    {standard input}:1810   .text.ssd1306_DrawArc:00000000 ssd1306_DrawArc
    {standard input}:2075   .text.ssd1306_DrawArc:00000214 $d
    {standard input}:2081   .text.ssd1306_DrawCircle:00000000 $t
    {standard input}:2086   .text.ssd1306_DrawCircle:00000000 ssd1306_DrawCircle
    {standard input}:2278   .text.ssd1306_DrawRectangle:00000000 $t
    {standard input}:2283   .text.ssd1306_DrawRectangle:00000000 ssd1306_DrawRectangle
    {standard input}:2364   .text.ssd1306_SetContrast:00000000 $t
    {standard input}:2412   .text.ssd1306_SetDisplayOn:00000000 $t
    {standard input}:2473   .text.ssd1306_SetDisplayOn:00000034 $d
    {standard input}:2478   .text.ssd1306_GetDisplayOn:00000000 $t
    {standard input}:2483   .text.ssd1306_GetDisplayOn:00000000 ssd1306_GetDisplayOn
    {standard input}:2514   .text.ssd1306_GetDisplayOn:00000014 $d
                     .debug_frame:00000010 $d
    {standard input}:1722   .text.ssd1306_DegToRad:00000054 $t

UNDEFINED SYMBOLS
XMC_I2C_CH_MasterStart
XMC_I2C_CH_MasterTransmit
XMC_I2C_CH_MasterStop
memcpy
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_i2d
__aeabi_d2iz
sin
cos
